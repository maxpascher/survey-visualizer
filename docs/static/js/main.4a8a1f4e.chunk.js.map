{"version":3,"sources":["components/Info/Info.js","components/Affinity/Affinity.js","components/Network/Network.js","components/Network/observablehq.js","components/Taxonomy/Taxonomy.js","components/Insights/Insights.js","components/BasicElement/BasicElement.js","content/LandingPage/LandingPage.js","content/LandingPage/index.js","App.js","index.js"],"names":["config","require","tag_color_percentile_map","red","magenta","purple","blue","cyan","teal","green","gray","cool-gray","warm-gray","tag_size_percentile_map","md","sm","hashID","node","taxonomy","name","parent","join","getParents","level","current_parent","slice","reverse","map","parent_level","temp_level","filter","getChildren","length","child","PaperInner","props","react_default","a","createElement","className","paper","title","authors","venue","year","link","Link","href","target","bucket_9","Paper","Tile","Info_PaperInner","Simulate","_this","Object","classCallCheck","this","_super","call","state","data","years","slide_on","options","toolbar","controls","height","grid","x","enabled","y","axes","bottom","visible","mapsTo","scaleType","left","color","gradient","points","legend","prevProps","prevState","setState","objectSpread2","e","handleSimulate","value","current_year","Date","getFullYear","toConsumableArray","Array","min_year","keys","paper_data","forEach","parseInt","group","date","Fragment","Slider","labelText","hideTextInput","onChange","bind","min","min_val","max","max_val","cur_val","step","charts_react","getTimeline","React","Component","TagArea","_this2","_super2","selected_tags","filter_tags","updateTagNumbers","updateTagSelection","_this3","tag","_this4","tag_mass","reduce","mass","key","is_big","percentile","new_size","some","size","_this5","tagSensitivity","new_color","_this6","current_filter","indexOf","push","_this7","index","splice","current_tags","is_something_selected","check","selected","tags","t","object","sortable","obj","sort","b","_this8","objectSort","i","Tag","onClose","onCloseTag","onClick","onClickTag","type","determineTagColor","determineTagSize","embeddings","find","views","default_tab","Affinity","handleMouseDown","evt","shiftKey","is_draggable","currentTarget","mouseClickEndShape","getStage","container","style","cursor","_e$target$getStage$ge","getPointerPosition","annotations","newAnnotation","width","handleMouseUp","sx","sy","_e$target$getStage$ge2","new_paper_data","cached_data","updateSelectedTab","handleMouseMove","_e$target$getStage$ge3","annotationToAdd","ref","createRef","stageRef","hoverText","stageHeight","stageWidth","current","offsetHeight","offsetWidth","offsetX","Math","apply","pos","maxX","offsetY","maxY","new_embeddings","new_embedding","lastCenter","lastDist","item","embedding_item","UID","new_item","applyScalingX","applyScalingY","p1","p2","sqrt","pow","scale","uid","Set","has","event","preventDefault","stage","oldScale","scaleX","_stage$getPointerPosi","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","position","batchDraw","touch1","touches","touch2","isDragging","stopDrag","clientX","clientY","getCenter","newCenter","dist","getDistance","pointTo","scaleY","dx","dy","onMouseUp","mouseUpGlobal","Notification","subtitle","kind","lowContrast","Info_Simulate","ReactKonva","onMouseDown","onMouseMove","draggable","onWheel","zoomStage","onTouchMove","handleTouch","onTouchEnd","handleTouchEnd","id","fill","opacity","radius","selectNode","onMouseEnter","onNodeHover","onMouseLeave","offNodeHover","Info_TagArea","initWidth","initHeight","Chart","svg","chart","_ref","nodes","links","_ref2","arguments","undefined","_ref2$nodeId","nodeId","d","nodeGroup","nodeGroups","nodeTitle","_ref2$nodeFill","nodeFill","_ref2$nodeStroke","nodeStroke","_ref2$nodeStrokeWidth","nodeStrokeWidth","_ref2$nodeStrokeOpaci","nodeStrokeOpacity","_ref2$nodeRadius","nodeRadius","nodeStrength","_ref2$linkSource","linkSource","_ref3","source","_ref2$linkTarget","linkTarget","_ref4","_ref2$linkStroke","linkStroke","_ref2$linkStrokeOpaci","linkStrokeOpacity","_ref2$linkStrokeWidth","linkStrokeWidth","_ref2$linkStrokeLinec","linkStrokeLinecap","linkStrength","_ref2$colors","colors","d3","_ref2$width","_ref2$height","invalidation","N","intern","LS","LT","_","T","G","W","L","forceNode","forceLink","_ref5","strength","simulation","force","on","attr","zoomRect","append","selectAll","active","alphaTarget","restart","subject","fx","fy","drag","zoom","scaleExtent","transform","valueOf","translateTo","_ref6","_ref7","_ref8","text","_ref9","then","stop","assign","scales","ForceGraph","concat","l","innerHTML","appendChild","Network","node_data","link_data","filter_links_by_nodes","is_link","Network_Chart","view_config","view","fancy_chart_default_level","Taxonomy","onClickModalNode","modal","onClickModalClose","handleSliderChange","slider","getPapersWithTag","taxonomy_data","tranformData2Tree","draw_circlemap","start","plot_options","temp_taxonomy_data","new_taxonomoy_data","children","num_papers","Boolean","showLabel","draw_treemap","taxonomy_data_fancy","determineExpandButton","node_status","Subtract16","Add16","onClimb","new_level","active_tab","nodeHeight","nodeWidth","nodeGapHoriontal","nodeGapVertical","vertical_offset","canvasZoom","axis","modal_timeline","top","container_width","switchTabs","tab_name","data_item","tab_config","tabs","tab","taxonomy_layer","taxonomy_level","new_taxonomoy_layer","expanded","fancy_chart_level","columns","updateSelectedTags","split_id","split","unhashID","selected_node","change_log","parent_element","parent_node","reference","parents","Breadcrumb","noTrailingSlash","BreadcrumbItem","isCurrentPage","status","new_taxonomy_layer","_this9","depth_hashes","current_level","cache_taxonomy_level","cache_parents","cache_nodes","temp_y","new_parents","p","overflow","CardNode_default","CardNode","Button","onClickExpandNode","renderIcon","iconDescription","hasIconOnly","Checkbox","edges","source_x","source_y","Edge_default","path","buildElbowPathString","variant","buttons","draw","any_enabled","Toggle","labelA","labelB","onToggle","toggleLevel","aria-label","defaultToggled","toString","taxonomy_area","title_text","Accordion","align","fancy_chart","AccordionItem","open","borderRight","marginLeft","marginBottom","CaretLeft32","disabled","CaretRight32","Modal","modalHeading","renderParents","modalLabel","passiveModal","hasScrollingContent","onRequestClose","abstract","marginRight","Document32","LogoGithub32","StructuredList","head","Tabs","scrollIntoView","Tab","label","tag_labels","taxonomy_item","idx","known_item","Insight","imagination","loading","error","rendered","componentDidMount","fetch","link_to_server","method","headers","Accept","Content-Type","Access-Control-Allow-Origin","body","JSON","stringify","result","json","new_paper","new_paper_embedding","catch","window","scrollTo","pageY","behavior","new_neighbors","neighbors","neighbor","neighbor_info","special_node","ShapeNode_default","parse","ShapeNodeSize","SpecialShapeNodeSize","fontSize","key_map","render_item","bucket_1","InlineLoading","description","ariaLabel","transforms","render_keys","t_item","ti","components","Insights","changeNumePapers","imaginaryTarget","logPaperSelection","selected_papers","logTagSelection","pageID","pageMAX","new_papers","payload","tag_chain","temp_c","temp_c_for_check","endsWith","domain","metadata","acronym","minHeight","hideCloseButton","interactive","MultiSelect","helperText","itemToString","items","titleText","initialSelectedItems","selectedItems","NumberInput","invalidText","imaginePapers","padding","Loading","margin","withOverlay","Pagination","backwardText","forwardText","itemsPerPageText","page","pageSize","pageSizes","totalItems","Insights_Insight","BasicElement","refreshData","updated_paper_list","cached_paper_data","search","search_list","trim","toLowerCase","meta_data","replaceAll","meta_data_set","is_true","s","search_keywords_list","search_keyword","number","max_max","max_year","min_min","index_of_tag","handleInputChange","sortYear","mode_selector","active_view","Search","light","placeholder","paddingTop","CaretUp32","CaretDown32","logChange","Info_Paper","LandingPage","ContentSwitcher","selectedIndex","Switch","CodeSnippet","ButtonSet","stacked","LogoSlack32","maxWidth","Add32","isMobile","backgroundColor","zIndex","role","react_github_btn","data-size","data-show-count","BasicElement_BasicElement","App","UIShell","react_router","exact","component","ReactDOM","render","react_router_dom","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4a8a1f4e.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, Tile, Slider, Tag } from 'carbon-components-react';\nimport { AreaChart } from '@carbon/charts-react';\nimport { Download16 } from '@carbon/icons-react';\n\nimport '@carbon/charts/styles.css';\n\nlet config = require('../../config.json');\n\nconst tagSensitivity = 5;\n\nconst tag_color_percentile_map = {\n  red: 60,\n  magenta: 50,\n  purple: 40,\n  blue: 35,\n  cyan: 30,\n  teal: 25,\n  green: 15,\n  gray: 10,\n  'cool-gray': 5,\n  'warm-gray': 0,\n};\n\nconst tag_size_percentile_map = {\n  md: 50,\n  sm: 0,\n};\n\nfunction generateURL(file, ext, dir) {\n  return `${process.env.PUBLIC_URL}${dir}/${file}.${ext}`;\n}\n\nfunction shuffleArray(array) {\n  var newArray = [...array];\n  let i = newArray.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = newArray[i];\n    newArray[i] = newArray[j];\n    newArray[j] = temp;\n  }\n  return newArray;\n}\n\nfunction hashID(node, taxonomy) {\n  return [node.name, node.parent].join('-child-of-');\n}\n\nfunction unhashID(id) {\n  var split_id = id.split('-child-of-');\n  return {\n    name: split_id[0],\n    parent: split_id[1],\n  };\n}\n\nfunction getParents(node, taxonomy) {\n  if (!node) return [];\n\n  if (node.level === 1) return [];\n\n  var current_parent = node.parent;\n  var sliced_data = taxonomy.slice(0, node.level - 1);\n\n  return sliced_data\n    .reverse()\n    .map((parent_level, level) => {\n      const temp_level = parent_level.filter(\n        parent => parent.name === current_parent\n      );\n\n      if (temp_level[0]) {\n        current_parent = temp_level[0].parent;\n      } else {\n        current_parent = taxonomy[0].name;\n      }\n\n      return temp_level;\n    })\n    .reverse();\n}\n\nfunction getChildren(node, taxonomy) {\n  if (!node) return [];\n\n  if (node.level >= taxonomy.length) return [];\n\n  const lower_level_data = taxonomy[node.level];\n  const children = lower_level_data.filter(child => child.parent === node.name);\n\n  return children;\n}\n\nconst PaperInner = props => (\n  <p className=\"paper\">\n    {props.paper.title} <em>by {props.paper.authors}</em>. {props.paper.venue} (\n    {props.paper.year}){' '}\n    {props.paper.link && (\n      <Link className=\"hover-cursor\" href={props.paper.link} target=\"_blank\">\n        <span className=\"download-icon\">\n          <Download16 />\n        </span>\n      </Link>\n    )}\n  </p>\n);\n\nconst Paper = props => (\n  <Tile className=\"paper-tile\">\n    <PaperInner paper={props.paper} />\n  </Tile>\n);\n\nclass Simulate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.data,\n      years: props.years,\n      slide_on: false,\n      options: {\n        toolbar: {\n          controls: [],\n        },\n        height: '75px',\n        grid: {\n          x: {\n            enabled: false,\n          },\n          y: {\n            enabled: false,\n          },\n        },\n        axes: {\n          bottom: {\n            visible: false,\n            title: '2019 Annual Sales Figures',\n            mapsTo: 'date',\n            scaleType: 'time',\n          },\n          left: {\n            visible: false,\n            mapsTo: 'value',\n            scaleType: 'linear',\n          },\n        },\n        color: {\n          gradient: {\n            enabled: true,\n          },\n        },\n        points: {\n          enabled: false,\n        },\n        legend: {\n          enabled: false,\n        },\n      },\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== prevProps.data) {\n      this.setState({\n        ...this.state,\n        data: this.props.data,\n        years: this.props.years,\n      });\n    } else if (this.props.years !== prevProps.years) {\n      this.setState({\n        ...this.state,\n        years: this.props.years,\n      });\n    }\n\n    if (this.props.slide_on !== prevProps.slide_on)\n      this.setState({\n        ...this.state,\n        slide_on: this.props.slide_on,\n      });\n  }\n\n  handleSimulate(e) {\n    this.props.handleSimulate(e.value);\n  }\n\n  getTimeline(e) {\n    const current_year = new Date().getFullYear();\n\n    var years = [...Array(current_year + 1 - config.min_year).keys()].map(e => {\n      return e + config.min_year;\n    });\n    var data = {};\n\n    const paper_data = this.state.data;\n\n    years.forEach(e => {\n      data[e] = 0;\n    });\n\n    if (paper_data)\n      paper_data.forEach(paper => {\n        data[parseInt(paper.year)] += 1;\n      });\n\n    data = Object.keys(data).map(e => {\n      return { group: 1, date: e, value: data[e] };\n    });\n\n    return data;\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"bx--col-lg-6\">\n          <Slider\n            labelText={config['metadata']['acronym'] + ' through the years'}\n            hideTextInput\n            onChange={this.handleSimulate.bind(this)}\n            min={this.state.years.min_val}\n            max={this.state.years.max_val}\n            value={this.state.years.cur_val}\n            step={1}\n          />\n        </div>\n\n        <div\n          className={\n            'bx--col-lg-6 ' + (!this.state.slide_on && ' display_none')\n          }>\n          <AreaChart\n            data={this.getTimeline()}\n            options={this.state.options}></AreaChart>\n        </div>\n      </>\n    );\n  }\n}\n\nclass TagArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.data,\n      selected_tags: [],\n      filter_tags: [],\n    };\n  }\n\n  componentDidMount(props) {\n    this.updateTagNumbers();\n  }\n\n  updateTagSelection(e) {\n    this.props.updateTagSelection(this.state.filter_tags);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== prevProps.data) {\n      this.setState(\n        {\n          data: this.props.data,\n        },\n        () => {\n          this.updateTagNumbers();\n        }\n      );\n    }\n  }\n\n  determineTagSize(tag) {\n    const tag_mass = Object.keys(this.state.selected_tags).reduce(\n      (mass, key) => mass + this.state.selected_tags[key],\n      0\n    );\n    const is_big =\n      this.state.selected_tags[tag] >\n      tag_mass / Object.keys(this.state.selected_tags).length;\n\n    var percentile = 0;\n    var new_size = 'sm';\n\n    if (is_big) percentile = 50;\n\n    Object.keys(tag_size_percentile_map).some(size => {\n      if (percentile >= tag_size_percentile_map[size]) {\n        new_size = size;\n        return true;\n      }\n\n      return false;\n    });\n\n    return new_size;\n  }\n\n  determineTagColor(tag) {\n    const tag_mass = Object.keys(this.state.selected_tags).reduce(\n      (mass, key) => mass + this.state.selected_tags[key],\n      0\n    );\n    const percentile =\n      (tagSensitivity * 100 * this.state.selected_tags[tag]) / tag_mass;\n\n    var new_color = 'sm';\n\n    Object.keys(tag_color_percentile_map).some(color => {\n      if (percentile >= tag_color_percentile_map[color]) {\n        new_color = color;\n        return true;\n      }\n\n      return false;\n    });\n\n    return new_color;\n  }\n\n  onClickTag(e) {\n    const current_filter = this.state.filter_tags;\n\n    if (current_filter.indexOf(e) === -1) {\n      current_filter.push(e);\n\n      this.setState(\n        {\n          ...this.state,\n          filter_tags: current_filter,\n        },\n        () => {\n          this.updateTagSelection();\n        }\n      );\n    }\n  }\n\n  onCloseTag(e) {\n    const current_filter = this.state.filter_tags;\n    const index = current_filter.indexOf(e);\n\n    if (index > -1) {\n      current_filter.splice(index, 1);\n\n      this.setState(\n        {\n          ...this.state,\n          filter_tags: current_filter,\n        },\n        () => {\n          this.updateTagSelection();\n        }\n      );\n    }\n  }\n\n  updateTagNumbers() {\n    const current_tags = [];\n\n    const is_something_selected = this.state.data.reduce((check, paper) => {\n      check = check || paper.selected;\n      return check;\n    }, false);\n\n    this.state.data.forEach(paper => {\n      paper.tags.forEach(t => {\n        const tag = t.name;\n\n        if (paper.selected || !is_something_selected) {\n          if (Object.keys(current_tags).indexOf(tag) > -1) {\n            current_tags[tag] = current_tags[tag] + 1;\n          } else {\n            if (tag) current_tags[tag] = 1;\n          }\n        } else {\n          if (Object.keys(current_tags).indexOf(tag) > -1) {\n            current_tags[tag] = current_tags[tag] - 1;\n\n            if (!current_tags[tag]) delete current_tags[tag];\n          }\n        }\n      });\n    });\n\n    this.setState({\n      ...this.state,\n      selected_tags: current_tags,\n    });\n  }\n\n  objectSort(object) {\n    var sortable = [];\n    for (var obj in object) {\n      sortable.push([obj, object[obj]]);\n    }\n\n    sortable.sort(function(a, b) {\n      return b[1] - a[1];\n    });\n\n    return sortable.map(e => e[0]);\n  }\n\n  render() {\n    return (\n      <>\n        {this.objectSort(this.state.selected_tags).map((tag, i) => (\n          <Tag\n            filter={this.state.filter_tags.indexOf(tag) > -1}\n            onClose={this.onCloseTag.bind(this, tag)}\n            onClick={this.onClickTag.bind(this, tag)}\n            key={i}\n            type={this.determineTagColor(tag)}\n            size={this.determineTagSize(tag)}>\n            {tag}\n          </Tag>\n        ))}\n      </>\n    );\n  }\n}\n\nexport {\n  generateURL,\n  shuffleArray,\n  hashID,\n  unhashID,\n  getParents,\n  getChildren,\n  PaperInner,\n  Paper,\n  TagArea,\n  Simulate,\n};\n","import React from 'react';\nimport { Stage, Layer, Rect, Circle } from 'react-konva';\nimport { InlineNotification, Link } from 'carbon-components-react';\nimport { PaperInner, Simulate, TagArea } from '../../components/Info';\n\nimport '@carbon/charts/styles.css';\n\nlet config = require('../../config.json');\nlet embeddings = require('../../compiler/data/Affinity.json');\n\nlet taxonomy_data = require('../../compiler/data/Taxonomy.json');\nlet paper_data = taxonomy_data.find(\n  e => e.name === config.views.find(e => e.name === 'Taxonomy').default_tab\n).data;\n\nconst ShapeNodeSize = 5;\nconst scaleBy = 1.01;\nconst fillFactor = 0.8;\n\nclass Affinity extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ref = React.createRef();\n    this.stageRef = React.createRef();\n    this.state = {\n      data: paper_data,\n      cached_data: paper_data,\n      hoverText: null,\n      annotations: [],\n      newAnnotation: [],\n      config: {\n        is_draggable: true,\n        stageHeight: 100,\n        stageWidth: 100,\n      },\n      years: this.props.years,\n    };\n\n    this.updateSelectedTab();\n  }\n\n  componentDidMount(props) {\n    const stageHeight = this.ref.current.offsetHeight;\n    const stageWidth = this.ref.current.offsetWidth;\n\n    const offsetX = Math.min(...embeddings.map(e => e.pos[0]));\n    const maxX = Math.max(...embeddings.map(e => e.pos[0]));\n\n    const offsetY = Math.min(...embeddings.map(e => e.pos[1]));\n    const maxY = Math.max(...embeddings.map(e => e.pos[1]));\n\n    let new_embeddings = embeddings.map(e => {\n      var new_embedding = e;\n\n      new_embedding.pos[0] =\n        (fillFactor * stageWidth * (-offsetX + e.pos[0])) / (maxX - offsetX);\n      new_embedding.pos[1] =\n        (fillFactor * stageHeight * (-offsetY + e.pos[1])) / (maxY - offsetY);\n\n      return new_embedding;\n    });\n\n    this.lastCenter = null;\n    this.lastDist = 0;\n\n    const new_paper_data = paper_data.map(item => {\n      const embedding_item = new_embeddings.filter(e => e.UID === item.UID)[0];\n      var new_item = item;\n\n      new_item['x'] =\n        5 * ShapeNodeSize + this.applyScalingX(1, embedding_item.pos[0]);\n      new_item['y'] =\n        5 * ShapeNodeSize + this.applyScalingY(1, embedding_item.pos[1]);\n\n      new_item.selected = false;\n      return new_item;\n    });\n\n    if (this.ref.current) {\n      this.setState({\n        ...this.state,\n        data: new_paper_data,\n        cached_data: new_paper_data,\n        config: {\n          ...this.state.config,\n          stageHeight: this.ref.current.offsetHeight,\n          stageWidth: this.ref.current.offsetWidth,\n        },\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.props !== prevProps.props)\n      this.setState({\n        ...this.state,\n        data: this.props.props,\n        years: this.props.years,\n      });\n  }\n\n  getDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n  }\n\n  getCenter(p1, p2) {\n    return {\n      x: (p1.x + p2.x) / 2,\n      y: (p1.y + p2.y) / 2,\n    };\n  }\n\n  applyScalingX(scale, x) {\n    return scale * x;\n  }\n\n  applyScalingY(scale, y) {\n    return scale * y;\n  }\n\n  handleMouseDown = e => {\n    if (e.evt.shiftKey) {\n      this.setState(\n        {\n          ...this.state,\n          config: {\n            ...this.state.config,\n            is_draggable: false,\n          },\n        },\n        () => {\n          if (e.currentTarget.mouseClickEndShape === null) {\n            const container = e.target.getStage().container();\n            container.style.cursor = 'grab';\n\n            const { x, y } = e.target.getStage().getPointerPosition();\n            this.setState({\n              ...this.state,\n              annotations: [],\n              newAnnotation: [{ x, y, width: 0, height: 0, key: '0' }],\n            });\n          }\n        }\n      );\n    } else {\n      this.setState({\n        ...this.state,\n        config: {\n          ...this.state.config,\n          is_draggable: true,\n        },\n      });\n    }\n  };\n\n  handleMouseUp = e => {\n    const container = e.target.getStage().container();\n    container.style.cursor = '';\n\n    if (this.state.newAnnotation.length) {\n      const sx = this.state.newAnnotation[0].x;\n      const sy = this.state.newAnnotation[0].y;\n      const { x, y } = e.target.getStage().getPointerPosition();\n\n      this.setState({\n        ...this.state,\n        annotations: [],\n        newAnnotation: [],\n      });\n\n      const new_paper_data = this.state.cached_data.map(paper => {\n        var selected = false;\n\n        if (x > sx) {\n          selected = paper.x > sx && paper.x < x;\n        } else {\n          selected = paper.x < sx && paper.x > x;\n        }\n\n        if (y > sy) {\n          selected = selected && paper.y > sy && paper.y < y;\n        } else {\n          selected = selected && paper.y < sy && paper.y > y;\n        }\n\n        return {\n          ...paper,\n          selected: selected,\n        };\n      });\n\n      var new_selection = new_paper_data.filter(e => e.selected);\n\n      if (new_selection.length) {\n        this.setState(\n          {\n            ...this.state,\n            data: new_paper_data.filter(e => e.selected),\n            cached_data: new_paper_data,\n          },\n          () => {\n            this.updateSelectedTab();\n          }\n        );\n      }\n    }\n  };\n\n  handleMouseMove = e => {\n    if (this.state.newAnnotation.length) {\n      const sx = this.state.newAnnotation[0].x;\n      const sy = this.state.newAnnotation[0].y;\n      const { x, y } = e.target.getStage().getPointerPosition();\n\n      const annotationToAdd = {\n        x: sx,\n        y: sy,\n        width: x - sx,\n        height: y - sy,\n        key: '0',\n      };\n\n      this.setState({\n        ...this.state,\n        annotations: [annotationToAdd],\n        newAnnotation: [annotationToAdd],\n      });\n    }\n  };\n\n  updateSelectedTab(e) {\n    this.props.updateSelectedTab(this.state.data, []);\n  }\n\n  onNodeHover(uid, e) {\n    const paper_data = this.state.cached_data.find(e => e.UID === uid);\n    const container = e.target.getStage().container();\n\n    if (!this.state.newAnnotation.length) container.style.cursor = 'pointer';\n\n    this.setState({\n      ...this.state,\n      hoverText: <PaperInner paper={paper_data} />,\n    });\n  }\n\n  offNodeHover(e) {\n    const container = e.target.getStage().container();\n    if (!this.state.newAnnotation.length) container.style.cursor = '';\n\n    this.setState({\n      ...this.state,\n      hoverText: null,\n    });\n  }\n\n  updateTagSelection(filter_tags) {\n    const paper_data = this.state.cached_data.filter(\n      paper =>\n        filter_tags.filter(tag => new Set(paper.tags.map(t => t.name)).has(tag))\n          .length > 0 || filter_tags.length === 0\n    );\n\n    this.setState(\n      {\n        ...this.state,\n        data: paper_data,\n      },\n      () => {\n        this.updateSelectedTab();\n      }\n    );\n  }\n\n  selectNode(uid) {\n    const new_paper_data = this.state.cached_data.map(paper => {\n      if (paper.UID === uid) paper.selected = !paper.selected;\n      return paper;\n    });\n\n    const is_something_selected = this.state.data.reduce((check, paper) => {\n      check = check || paper.selected;\n      return check;\n    }, false);\n\n    if (!is_something_selected) {\n      this.setState(\n        {\n          ...this.state,\n          data: this.state.cached_data,\n        },\n        () => {\n          this.updateSelectedTab();\n        }\n      );\n    } else {\n      this.setState(\n        {\n          ...this.state,\n          data: new_paper_data.filter(e => e.selected),\n        },\n        () => {\n          this.updateSelectedTab();\n        }\n      );\n    }\n  }\n\n  zoomStage(event) {\n    event.evt.preventDefault();\n    if (this.stageRef.current) {\n      const stage = this.stageRef.current;\n      const oldScale = stage.scaleX();\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\n      const mousePointTo = {\n        x: (pointerX - stage.x()) / oldScale,\n        y: (pointerY - stage.y()) / oldScale,\n      };\n      const newScale =\n        event.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\n      stage.scale({ x: newScale, y: newScale });\n      const newPos = {\n        x: pointerX - mousePointTo.x * newScale,\n        y: pointerY - mousePointTo.y * newScale,\n      };\n      stage.position(newPos);\n      stage.batchDraw();\n    }\n  }\n\n  handleTouch(e) {\n    e.evt.preventDefault();\n    var touch1 = e.evt.touches[0];\n    var touch2 = e.evt.touches[1];\n    const stage = this.stageRef.current;\n    if (stage !== null) {\n      if (touch1 && touch2) {\n        if (stage.isDragging()) {\n          stage.stopDrag();\n        }\n\n        var p1 = {\n          x: touch1.clientX,\n          y: touch1.clientY,\n        };\n        var p2 = {\n          x: touch2.clientX,\n          y: touch2.clientY,\n        };\n\n        if (!this.lastCenter) {\n          this.lastCenter = this.getCenter(p1, p2);\n          return;\n        }\n        var newCenter = this.getCenter(p1, p2);\n\n        var dist = this.getDistance(p1, p2);\n\n        if (!this.lastDist) {\n          this.lastDist = dist;\n        }\n\n        // local coordinates of center point\n        var pointTo = {\n          x: (newCenter.x - stage.x()) / stage.scaleX(),\n          y: (newCenter.y - stage.y()) / stage.scaleX(),\n        };\n\n        var scale = stage.scaleX() * (dist / this.lastDist);\n\n        stage.scaleX(scale);\n        stage.scaleY(scale);\n\n        // calculate new position of the stage\n        var dx = newCenter.x - this.lastCenter.x;\n        var dy = newCenter.y - this.lastCenter.y;\n\n        var newPos = {\n          x: newCenter.x - pointTo.x * scale + dx,\n          y: newCenter.y - pointTo.y * scale + dy,\n        };\n\n        stage.position(newPos);\n        stage.batchDraw();\n\n        this.lastDist = dist;\n        this.lastCenter = newCenter;\n      }\n    }\n  }\n\n  handleTouchEnd() {\n    this.lastCenter = null;\n    this.lastDist = 0;\n  }\n\n  mouseUpGlobal(e) {\n    this.setState({\n      ...this.state,\n      slide_on: false,\n    });\n  }\n\n  handleSimulate(e) {\n    this.setState(\n      {\n        ...this.state,\n        slide_on: true,\n      },\n      () => {\n        this.props.handleSimulate(e);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div onMouseUp={this.mouseUpGlobal.bind(this)}>\n        <InlineNotification\n          subtitle={\n            <span>\n              This view into document similarity space was inspired from{' '}\n              <Link\n                href=\"https://github.com/Mini-Conf/Mini-Conf\"\n                target=\"_blank\">\n                Miniconf\n              </Link>\n              . Each dot is a paper. If you <b>hover</b> over a dot, you see the\n              corresponding paper. To learn more about an area of the plot,{' '}\n              <b>Select</b> one or more papers by clicking on the dots or by\n              pressing SHIFT and dragging a rectangle over them.\n            </span>\n          }\n          title=\"Document Embeddings\"\n          kind=\"info\"\n          lowContrast\n        />\n\n        <div className=\"bx--container\">\n          <div className=\"bx--row\">\n            <Simulate\n              data={this.state.data}\n              years={this.state.years}\n              handleSimulate={this.handleSimulate.bind(this)}\n              slide_on={this.state.slide_on}\n            />\n\n            <div\n              className={\n                'bx--col-lg-6 ' + (this.state.slide_on && ' display_none')\n              }\n              style={{ height: '75px' }}>\n              <span>{this.state.hoverText}</span>\n            </div>\n          </div>\n        </div>\n\n        <div\n          className=\"bx--col-lg-16\"\n          style={{ height: '40vh' }}\n          ref={this.ref}>\n          <Stage\n            onMouseDown={this.handleMouseDown}\n            onMouseUp={this.handleMouseUp}\n            onMouseMove={this.handleMouseMove}\n            width={this.state.config.stageWidth}\n            height={this.state.config.stageHeight}\n            draggable={this.state.config.is_draggable}\n            onWheel={this.zoomStage.bind(this)}\n            onTouchMove={this.handleTouch.bind(this)}\n            onTouchEnd={this.handleTouchEnd.bind(this)}\n            ref={this.stageRef}>\n            <Layer>\n              {this.state.annotations.map((value, id) => {\n                return (\n                  <Rect\n                    key={id}\n                    x={value.x}\n                    y={value.y}\n                    width={value.width}\n                    height={value.height}\n                    fill=\"#0f62fe\"\n                    opacity={0.7}\n                  />\n                );\n              })}\n\n              {this.state.cached_data.map(paper => (\n                <Circle\n                  key={paper.UID}\n                  x={paper.x}\n                  y={paper.y}\n                  radius={ShapeNodeSize}\n                  fill=\"#e4e4e4\"\n                  onMouseDown={this.selectNode.bind(this, paper.UID)}\n                  onMouseEnter={this.onNodeHover.bind(this, paper.UID)}\n                  onMouseLeave={this.offNodeHover.bind(this)}\n                />\n              ))}\n\n              {this.state.data.map(paper => (\n                <Circle\n                  key={paper.UID}\n                  x={paper.x}\n                  y={paper.y}\n                  radius={ShapeNodeSize}\n                  fill={paper.selected ? '#0f62fe' : '#d2e6ff'}\n                  onMouseDown={this.selectNode.bind(this, paper.UID)}\n                  onMouseEnter={this.onNodeHover.bind(this, paper.UID)}\n                  onMouseLeave={this.offNodeHover.bind(this)}\n                />\n              ))}\n            </Layer>\n          </Stage>\n        </div>\n\n        <div className=\"bx--container\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12\">\n              <TagArea\n                data={this.state.data}\n                updateTagSelection={this.updateTagSelection.bind(this)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { Affinity };\n","import React from 'react';\nimport { InlineNotification } from 'carbon-components-react';\nimport { ForceGraph } from './observablehq.js';\nimport { Simulate, TagArea } from '../../components/Info';\n\nlet paper_data = require('../../compiler/data/Network.json');\n\nconst initWidth = 800;\nconst initHeight = 600;\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.svg = React.createRef();\n    this.state = {};\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props !== prevProps) {\n      this.chart = ForceGraph(this.props.data, {\n        nodeId: d => d.UID,\n        nodeGroup: d => d.group,\n        nodeTitle: d => `${d.title}. ${d.authors}. ${d.venue}. (${d.year})`,\n        linkStrokeWidth: l => Math.sqrt(l.value),\n        width: this.props.width,\n        height: this.props.height,\n      });\n\n      this.svg.current.innerHTML = '';\n      this.svg.current.appendChild(this.chart);\n    }\n  }\n\n  render() {\n    return <div ref={this.svg} />;\n  }\n}\n\nclass Network extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      node_data: paper_data.nodes,\n      link_data: this.filter_links_by_nodes(paper_data.nodes, paper_data.links),\n      width: initWidth,\n      height: initHeight,\n      years: this.props.years,\n    };\n\n    this.ref = React.createRef();\n    this.updateSelectedTab();\n  }\n\n  componentDidMount(props) {\n    if (this.ref.current) {\n      this.setState({\n        ...this.state,\n        width: this.ref.current.offsetWidth,\n        height: this.ref.current.offsetHeight,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.props !== prevProps.props) {\n      const node_data = this.props.props;\n      const link_data = this.filter_links_by_nodes(node_data, paper_data.links);\n\n      this.setState({\n        ...this.state,\n        node_data: node_data,\n        link_data: link_data,\n        years: this.props.years,\n      });\n    }\n  }\n\n  updateSelectedTab(e) {\n    this.props.updateSelectedTab(this.state.node_data, []);\n  }\n\n  mouseUpGlobal(e) {\n    this.setState({\n      ...this.state,\n      slide_on: false,\n    });\n  }\n\n  handleSimulate(e) {\n    this.setState(\n      {\n        ...this.state,\n        slide_on: true,\n      },\n      () => {\n        this.props.handleSimulate(e);\n      }\n    );\n  }\n\n  filter_links_by_nodes(nodes, links) {\n    return links.filter(e => {\n      var is_link = nodes.reduce(\n        (is_link, node) => (is_link = is_link || e.source === node.UID),\n        false\n      );\n      is_link =\n        is_link &&\n        nodes.reduce(\n          (is_link, node) => (is_link = is_link || e.target === node.UID),\n          false\n        );\n\n      return is_link;\n    });\n  }\n\n  updateTagSelection(filter_tags) {\n    const node_data = paper_data.nodes.filter(\n      paper =>\n        filter_tags.filter(tag => new Set(paper.tags.map(t => t.name)).has(tag))\n          .length > 0 || filter_tags.length === 0\n    );\n\n    this.setState(\n      {\n        ...this.state,\n        node_data: node_data,\n        link_data: this.filter_links_by_nodes(node_data, paper_data.links),\n      },\n      () => {\n        this.updateSelectedTab();\n      }\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <InlineNotification\n          subtitle={\n            <span>\n              This network shows how papers here point to each other. Hover over\n              a node to see its identity. The connections are parsed\n              automatically from PDFs.{' '}\n              <strong>This process is somewhat noisy.</strong> We hope to\n              improve it over time.\n            </span>\n          }\n          title=\"Citation Network\"\n          kind=\"info\"\n          lowContrast\n        />\n        <div\n          className=\"bx--container\"\n          onMouseUp={this.mouseUpGlobal.bind(this)}>\n          <div className=\"bx--row\">\n            <Simulate\n              data={this.state.node_data}\n              years={this.state.years}\n              handleSimulate={this.handleSimulate.bind(this)}\n              slide_on={this.state.slide_on}\n            />\n          </div>\n\n          <br />\n          <br />\n\n          <div ref={this.ref} style={{ height: '50vh' }}>\n            <Chart\n              data={{\n                nodes: this.state.node_data,\n                links: this.state.link_data,\n              }}\n              width={this.state.width}\n              height={this.state.height}\n            />\n          </div>\n\n          <br />\n          <br />\n\n          <div className=\"bx--container\">\n            <div className=\"bx--row\">\n              <div className=\"bx--col-lg-12\">\n                <TagArea\n                  data={this.state.node_data}\n                  updateTagSelection={this.updateTagSelection.bind(this)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport { Network };\n","// Copyright 2021 Observable, Inc.\n// Released under the ISC license.\n// https://observablehq.com/@d3/force-directed-graph\nimport * as d3 from 'd3';\n\nfunction ForceGraph(\n  {\n    nodes, // an iterable of node objects (typically [{id}, …])\n    links, // an iterable of link objects (typically [{source, target}, …])\n  },\n  {\n    nodeId = d => d.UID, // given d in nodes, returns a unique identifier (string)\n    nodeGroup, // given d in nodes, returns an (ordinal) value for color\n    nodeGroups, // an array of ordinal values representing the node groups\n    nodeTitle, // given d in nodes, a title string\n    nodeFill = 'currentColor', // node stroke fill (if not using a group color encoding)\n    nodeStroke = '#fff', // node stroke color\n    nodeStrokeWidth = 1.5, // node stroke width, in pixels\n    nodeStrokeOpacity = 1, // node stroke opacity\n    nodeRadius = 5, // node radius, in pixels\n    nodeStrength,\n    linkSource = ({ source }) => source, // given d in links, returns a node identifier string\n    linkTarget = ({ target }) => target, // given d in links, returns a node identifier string\n    linkStroke = '#999', // link stroke color\n    linkStrokeOpacity = 0.6, // link stroke opacity\n    linkStrokeWidth = 1.5, // given d in links, returns a stroke width in pixels\n    linkStrokeLinecap = 'round', // link stroke linecap\n    linkStrength,\n    colors = d3.schemeTableau10, // an array of color strings, for the node groups\n    width = 640, // outer width, in pixels\n    height = 400, // outer height, in pixels\n    invalidation, // when this promise resolves, stop the simulation\n  } = {}\n) {\n  // Compute values.\n  const N = d3.map(nodes, nodeId).map(intern);\n  const LS = d3.map(links, linkSource).map(intern);\n  const LT = d3.map(links, linkTarget).map(intern);\n  if (nodeTitle === undefined) nodeTitle = (_, i) => N[i];\n  const T = nodeTitle == null ? null : d3.map(nodes, nodeTitle);\n  const G = nodeGroup == null ? null : d3.map(nodes, nodeGroup).map(intern);\n  const W =\n    typeof linkStrokeWidth !== 'function'\n      ? null\n      : d3.map(links, linkStrokeWidth);\n  const L = typeof linkStroke !== 'function' ? null : d3.map(links, linkStroke);\n\n  // Replace the input nodes and links with mutable objects for the simulation.\n  nodes = d3.map(nodes, (_, i) => ({ id: N[i] }));\n  links = d3.map(links, (_, i) => ({ source: LS[i], target: LT[i] }));\n\n  // Compute default domains.\n  if (G && nodeGroups === undefined) nodeGroups = d3.sort(G);\n\n  // Construct the scales.\n  const color = nodeGroup == null ? null : d3.scaleOrdinal(nodeGroups, colors);\n\n  // Construct the forces.\n  const forceNode = d3.forceManyBody();\n  const forceLink = d3.forceLink(links).id(({ index: i }) => N[i]);\n  if (nodeStrength !== undefined) forceNode.strength(nodeStrength);\n  if (linkStrength !== undefined) forceLink.strength(linkStrength);\n\n  const simulation = d3\n    .forceSimulation(nodes)\n    .force('link', forceLink)\n    .force('charge', forceNode)\n    .force('center', d3.forceCenter())\n    .on('tick', ticked)\n    .force('x', d3.forceX())\n    .force('y', d3.forceY());\n\n  const svg = d3\n    .create('svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', [-width / 2, -height / 2, width, height])\n    .attr('style', 'max-width: 100%; height: auto; height: intrinsic;');\n\n  const zoomRect = svg\n    .append('rect')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('x', -width / 2)\n    .attr('y', -height / 2)\n    .style('fill', 'none')\n    .style('pointer-events', 'all');\n\n  const link = svg\n    .append('g')\n    .attr('stroke', typeof linkStroke !== 'function' ? linkStroke : null)\n    .attr('stroke-opacity', linkStrokeOpacity)\n    .attr(\n      'stroke-width',\n      typeof linkStrokeWidth !== 'function' ? linkStrokeWidth : null\n    )\n    .attr('stroke-linecap', linkStrokeLinecap)\n    .selectAll('line')\n    .data(links)\n    .join('line');\n\n  const node = svg\n    .append('g')\n    .attr('fill', nodeFill)\n    .attr('stroke', nodeStroke)\n    .attr('stroke-opacity', nodeStrokeOpacity)\n    .attr('stroke-width', nodeStrokeWidth)\n    .selectAll('circle')\n    .data(nodes)\n    .join('circle')\n    .attr('r', nodeRadius)\n    .call(drag(simulation));\n\n  const zoom = d3\n    .zoom()\n    .scaleExtent([1 / 2, 64])\n    .on('zoom', zoomed);\n\n  zoomRect.call(zoom).call(zoom.translateTo, 0, 0);\n\n  if (W) link.attr('stroke-width', ({ index: i }) => W[i]);\n  if (L) link.attr('stroke', ({ index: i }) => L[i]);\n  if (G) node.attr('fill', ({ index: i }) => color(G[i]));\n  if (T) node.append('title').text(({ index: i }) => T[i]);\n  if (invalidation != null) invalidation.then(() => simulation.stop());\n\n  function intern(value) {\n    return value !== null && typeof value === 'object'\n      ? value.valueOf()\n      : value;\n  }\n\n  function ticked() {\n    link\n      .attr('x1', d => d.source.x)\n      .attr('y1', d => d.source.y)\n      .attr('x2', d => d.target.x)\n      .attr('y2', d => d.target.y);\n\n    node.attr('cx', d => d.x).attr('cy', d => d.y);\n  }\n\n  function drag(simulation) {\n    function dragstarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n\n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n\n    return d3\n      .drag()\n      .on('start', dragstarted)\n      .on('drag', dragged)\n      .on('end', dragended);\n  }\n\n  function zoomed(event) {\n    node.attr('transform', event.transform);\n    link.attr('transform', event.transform);\n  }\n\n  return Object.assign(svg.node(), { scales: { color } });\n}\n\nexport { ForceGraph };\n","import React from 'react';\nimport '@carbon/charts/styles.css';\nimport Edge from '@carbon/charts-react/diagrams/Edge';\nimport CardNode, {\n  CardNodeColumn,\n  CardNodeTitle,\n} from '@carbon/charts-react/diagrams/CardNode';\nimport {\n  TreemapChart,\n  CirclePackChart,\n  SimpleBarChart,\n} from '@carbon/charts-react';\nimport {\n  hashID,\n  unhashID,\n  getParents,\n  getChildren,\n  PaperInner,\n} from '../../components/Info';\nimport { buildElbowPathString } from '@carbon/charts/components/diagrams/buildPaths';\nimport {\n  Document32,\n  LogoGithub32,\n  Add16,\n  Subtract16,\n  CaretRight32,\n  CaretLeft32,\n} from '@carbon/icons-react';\nimport {\n  Modal,\n  Checkbox,\n  Button,\n  Link,\n  Breadcrumb,\n  BreadcrumbItem,\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListCell,\n  Tabs,\n  Tab,\n  Slider,\n  Toggle,\n  AccordionItem,\n  Accordion,\n} from 'carbon-components-react';\n\nlet config = require('../../config.json');\nlet view_config = config.views.filter(view => view.name === 'Taxonomy')[0];\nlet data = require('../../compiler/data/Taxonomy.json');\n\nlet fancy_chart_default_level = 2;\n\nclass Taxonomy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {\n      data: data,\n      active_tab: view_config['default_tab'],\n      taxonomy_data: [],\n      paper_data: [],\n      taxonomy_data_fancy: [],\n      modal: false,\n      config: {\n        nodeHeight: 50,\n        nodeWidth: 200,\n        nodeGapHoriontal: 250,\n        nodeGapVertical: 100,\n        slider: 12,\n        vertical_offset: 0,\n        plot_options: {\n          title: '',\n          draw_treemap: true,\n          draw_circlemap: true,\n          level: fancy_chart_default_level,\n          canvasZoom: {\n            enabled: true,\n          },\n          height: '400px',\n          width: '100%',\n          axis: {\n            legend: {\n              position: 'TOP',\n            },\n          },\n        },\n        modal_timeline: {\n          legend: {\n            enabled: false,\n          },\n          grid: {\n            x: {\n              enabled: false,\n            },\n            y: {\n              enabled: false,\n            },\n          },\n          axes: {\n            left: {\n              mapsTo: 'year',\n              scaleType: 'labels',\n            },\n            top: {\n              mapsTo: 'value',\n            },\n          },\n          height: '1000px',\n          width: '90%',\n        },\n      },\n    };\n  }\n\n  componentDidMount(props) {\n    if (this.ref.current) {\n      const container_width = this.ref.current.offsetWidth;\n\n      this.setState(\n        {\n          ...this.state,\n          config: {\n            ...this.state.config,\n            nodeWidth: container_width / 5,\n            nodeGapHoriontal: container_width / 4,\n          },\n        },\n        () => {\n          this.switchTabs(this.state.active_tab);\n        }\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.props !== prevProps.props)\n      this.setState(\n        {\n          ...this.state,\n          paper_data: this.props.props,\n          years: this.props.years,\n        },\n        () => {\n          this.tranformData2Tree();\n        }\n      );\n  }\n\n  switchTabs(tab_name) {\n    const new_paper_data = data.filter(\n      data_item => data_item.name === tab_name\n    )[0];\n\n    const tab_config = view_config.tabs.filter(\n      tab => tab.tab_name === tab_name\n    )[0];\n\n    const new_taxonomoy_data = new_paper_data.taxonomy.map(\n      (taxonomy_layer, taxonomy_level) => {\n        var new_taxonomoy_layer = [];\n\n        taxonomy_layer.forEach(node => {\n          if (!getChildren(node, new_paper_data.taxonomy).length)\n            node.expanded = false;\n\n          new_taxonomoy_layer.push(node);\n        });\n\n        return new_taxonomoy_layer;\n      }\n    );\n\n    const fancy_chart_level = tab_config.fancy_chart_default_level\n      ? tab_config.fancy_chart_default_level\n      : Math.min(fancy_chart_default_level, new_taxonomoy_data.length - 1);\n\n    this.setState(\n      {\n        ...this.state,\n        active_tab: tab_name,\n        taxonomy_data: new_taxonomoy_data,\n        paper_data: new_paper_data.data,\n        config: {\n          ...this.state.config,\n          vertical_offset: tab_config.taxonomy.columns.start,\n          plot_options: {\n            ...this.state.config.plot_options,\n            level: fancy_chart_level,\n          },\n        },\n      },\n      () => {\n        this.updateSelectedTab();\n        this.tranformData2Tree();\n      }\n    );\n  }\n\n  updateSelectedTab(e) {\n    this.props.updateSelectedTab(\n      this.state.paper_data,\n      this.state.taxonomy_data\n    );\n  }\n\n  updateSelectedTags(e) {\n    this.props.updateSelectedTags(unhashID(e.currentTarget.id));\n  }\n\n  onClickExpandNode(selected_node) {\n    var change_log = [];\n    var new_taxonomoy_data = this.state.taxonomy_data.map(\n      (taxonomy_layer, taxonomy_level) =>\n        taxonomy_layer.map((node, i) => {\n          if (hashID(node) === hashID(selected_node)) {\n            node.expanded = !node.expanded;\n            change_log.push(node);\n          }\n\n          var parent_element = null;\n          if (\n            taxonomy_level > 0 &&\n            taxonomy_level < this.state.taxonomy_data.length - 1\n          )\n            parent_element = this.state.taxonomy_data[taxonomy_level - 1].find(\n              parent_node => parent_node.name === node.parent\n            );\n\n          if (parent_element) {\n            var reference = change_log.find(\n              e => hashID(e) === hashID(parent_element)\n            );\n\n            if (reference) {\n              node.expanded = reference.expanded;\n              change_log.push(node);\n            }\n          }\n\n          return node;\n        })\n    );\n\n    this.setState({\n      ...this.state,\n      taxonomy_data: new_taxonomoy_data,\n    });\n  }\n\n  onClickModalNode = e => {\n    this.setState({\n      ...this.state,\n      modal: e,\n    });\n  };\n\n  onClickModalClose = e => {\n    this.setState({\n      ...this.state,\n      modal: false,\n    });\n  };\n\n  handleSliderChange = e => {\n    this.setState({\n      ...this.state,\n      config: {\n        ...this.state.config,\n        slider: e.value,\n      },\n    });\n  };\n\n  getPapersWithTag = node => {\n    return this.state.paper_data.filter(\n      paper =>\n        paper.tags\n          .map(e => hashID(e))\n          .indexOf(hashID(node, this.state.taxonomy_data)) > -1\n    );\n  };\n\n  tranformData2Tree = e => {\n    var draw_circlemap = true;\n    var start = this.state.config.plot_options.level;\n    var stop = this.state.config.plot_options.level + 1;\n\n    const temp_taxonomy_data = this.state.taxonomy_data.slice(start - 1, stop);\n    const new_taxonomoy_data = temp_taxonomy_data[0].map((item, id) => {\n      const children = temp_taxonomy_data[1]\n        .filter(e => e.parent === item.name)\n        .map(e => {\n          const num_papers = this.getPapersWithTag(e).length;\n          draw_circlemap = draw_circlemap && Boolean(num_papers);\n\n          return {\n            name: e.name,\n            value: num_papers ? num_papers : 0,\n            showLabel: true,\n          };\n        });\n      var new_node = {\n        name: item.name,\n        children: children,\n      };\n\n      return new_node;\n    });\n\n    this.setState(\n      {\n        ...this.state,\n        config: {\n          ...this.state.config,\n          plot_options: {\n            ...this.state.config.plot_options,\n            draw_treemap: false,\n            draw_circlemap: false,\n          },\n        },\n      },\n      () => {\n        this.setState({\n          ...this.state,\n          taxonomy_data_fancy: new_taxonomoy_data,\n          config: {\n            ...this.state.config,\n            plot_options: {\n              ...this.state.config.plot_options,\n              draw_treemap: true,\n              draw_circlemap: true,\n            },\n          },\n        });\n      }\n    );\n  };\n\n  getTimeline(e) {\n    const current_year = new Date().getFullYear();\n\n    var years = [...Array(current_year + 1 - config.min_year).keys()].map(e => {\n      return e + config.min_year;\n    });\n    var data = {};\n\n    const paper_data = this.state.paper_data.filter(\n      paper =>\n        paper['tags'].map(e => hashID(e)).indexOf(hashID(this.state.modal)) > -1\n    );\n\n    years.forEach(e => {\n      data[e] = 0;\n    });\n\n    if (paper_data)\n      paper_data.forEach(paper => {\n        data[parseInt(paper.year)] += 1;\n      });\n\n    data = Object.keys(data).map(e => {\n      return { year: e, value: data[e] };\n    });\n\n    return data;\n  }\n\n  renderParents(node) {\n    const parents = getParents(node, this.state.taxonomy_data);\n\n    if (!parents.length) return [];\n\n    return (\n      <Breadcrumb noTrailingSlash>\n        {parents.map((parent_level, level) => {\n          return parent_level.map((parent, i) => (\n            <BreadcrumbItem\n              className=\"hover-cursor\"\n              onClick={this.onClickModalNode.bind(this, parent)}\n              key={i}>\n              {parent.name}\n            </BreadcrumbItem>\n          ));\n        })}\n        <BreadcrumbItem isCurrentPage>{node.name}</BreadcrumbItem>\n      </Breadcrumb>\n    );\n  }\n\n  toggleLevel(level, status) {\n    const new_taxonomoy_data = this.state.taxonomy_data.map(\n      (taxonomy_layer, taxonomy_level) => {\n        var new_taxonomy_layer = taxonomy_layer;\n\n        if (\n          taxonomy_level >= level &&\n          taxonomy_level < this.state.taxonomy_data.length - 1\n        )\n          new_taxonomy_layer = taxonomy_layer.map(e => {\n            e.expanded = status;\n            return e;\n          });\n\n        return new_taxonomy_layer;\n      }\n    );\n\n    this.setState({\n      ...this.state,\n      taxonomy_data: new_taxonomoy_data,\n    });\n  }\n\n  determineExpandButton = node_status => {\n    if (node_status) {\n      return Subtract16;\n    } else {\n      return Add16;\n    }\n  };\n\n  onClimb = e => {\n    var new_level = this.state.config.plot_options.level;\n    var delta = e.currentTarget.name === 'climb-up' ? 1 : -1;\n\n    new_level = new_level + delta;\n    new_level = Math.min(this.state.taxonomy_data.length - 1, new_level);\n    new_level = Math.max(1, new_level);\n\n    this.setState(\n      {\n        ...this.state,\n        config: {\n          ...this.state.config,\n          plot_options: {\n            ...this.state.config.plot_options,\n            level: new_level,\n          },\n        },\n      },\n      () => {\n        this.tranformData2Tree();\n      }\n    );\n  };\n\n  render() {\n    var depth_hashes = {};\n    const nodes = this.state.taxonomy_data.map(\n      (taxonomy_layer, taxonomy_level) => {\n        var current_level = 0;\n\n        return taxonomy_layer.map((node, i) => {\n          var parent_element = null;\n\n          if (taxonomy_level > 0)\n            parent_element = this.state.taxonomy_data[taxonomy_level - 1].find(\n              parent_node => parent_node.name === node.parent\n            );\n\n          if (!parent_element || parent_element.expanded) {\n            var cache_taxonomy_level = taxonomy_level + 1;\n            var cache_parents = taxonomy_layer\n              .filter((node, index) => index < i)\n              .filter(e => e.expanded);\n            var cache_nodes = taxonomy_layer\n              .filter((node, index) => index < i)\n              .filter(e => !e.expanded);\n\n            var temp_y = 0;\n\n            if (cache_parents.length === 0 && node.parent) {\n              const parents = getParents(node, this.state.taxonomy_data);\n              const parent = parents[parents.length - 1][0];\n\n              temp_y =\n                depth_hashes[hashID(parent)].temp_y +\n                taxonomy_layer\n                  .filter(e => e.parent === parent.name)\n                  .indexOf(node);\n            } else {\n              while (cache_taxonomy_level < this.state.taxonomy_data.length) {\n                var new_parents = [];\n                var new_taxonomy_layer = this.state.taxonomy_data[\n                  cache_taxonomy_level\n                ].filter(node =>\n                  new Set(cache_parents.map(p => p.name)).has(node.parent)\n                );\n\n                new_taxonomy_layer.forEach(parent => {\n                  if (!parent.expanded) {\n                    cache_nodes.push(parent);\n                  } else {\n                    new_parents.push(parent);\n                  }\n                });\n\n                cache_parents = new_parents;\n                cache_taxonomy_level++;\n              }\n\n              temp_y = cache_nodes.length;\n            }\n\n            if (current_level && temp_y === current_level)\n              temp_y = temp_y + taxonomy_layer.indexOf(node);\n\n            current_level = temp_y;\n\n            var x = (node.level - 1) * this.state.config.nodeGapHoriontal;\n            var y = (temp_y + 0.5) * this.state.config.nodeGapVertical;\n\n            depth_hashes[hashID(node)] = {\n              temp_y: temp_y,\n              y: y,\n            };\n\n            return (\n              <foreignObject\n                style={{ overflow: 'visible' }}\n                key={`node_${i}`}\n                transform={`translate(${x}, ${y})`}\n                height={this.state.config.nodeHeight}\n                width={this.state.config.nodeWidth}>\n                <>\n                  <CardNode onClick={this.onClickModalNode.bind(this, node)}>\n                    <CardNodeColumn>\n                      <CardNodeTitle className=\"text-overflow\">\n                        {node.name}\n                      </CardNodeTitle>\n                    </CardNodeColumn>\n                  </CardNode>\n                  {getChildren(node, this.state.taxonomy_data).length > 0 && (\n                    <Button\n                      onClick={this.onClickExpandNode.bind(this, node)}\n                      kind=\"ghost\"\n                      className=\"expand-button\"\n                      renderIcon={this.determineExpandButton(node.expanded)}\n                      iconDescription=\"Expand\"\n                      hasIconOnly\n                    />\n                  )}\n                  <Checkbox\n                    labelText={\n                      <span className=\"text-blue\">\n                        {this.getPapersWithTag(node).length}\n                      </span>\n                    }\n                    id={hashID(node, this.state.taxonomy_data)}\n                    onClick={this.updateSelectedTags.bind(this)}\n                  />\n                </>\n              </foreignObject>\n            );\n          } else {\n            return <span key={i}></span>;\n          }\n        });\n      }\n    );\n\n    const edges = this.state.taxonomy_data\n      .filter((taxonomy_layer, taxonomy_level) => taxonomy_level > 0)\n      .map((taxonomy_layer, taxonomy_level) =>\n        taxonomy_layer.map((node, i) => {\n          var source_x = 0;\n          var source_y = 0;\n\n          const parent_element = this.state.taxonomy_data[taxonomy_level].find(\n            parent_node => parent_node.name === node.parent\n          );\n\n          if (parent_element && parent_element.expanded) {\n            source_x =\n              (parent_element.level - 1) * this.state.config.nodeGapHoriontal;\n            source_y = depth_hashes[hashID(parent_element)].y;\n\n            const source = {\n              x: source_x - 1 + this.state.config.nodeWidth / 2,\n              y: source_y + this.state.config.nodeHeight / 2,\n            };\n\n            const target = {\n              x: (node.level - 1) * this.state.config.nodeGapHoriontal,\n              y:\n                depth_hashes[hashID(node)].y + this.state.config.nodeHeight / 2,\n            };\n\n            return (\n              <Edge\n                key={`link_${i}`}\n                source={source}\n                target={target}\n                path={buildElbowPathString(source, target)}\n                variant=\"dash-md\"\n              />\n            );\n          } else {\n            return <span key={i}></span>;\n          }\n        })\n      );\n\n    const buttons = this.state.taxonomy_data\n      .filter(\n        (taxonomy_layer, taxonomy_level) =>\n          taxonomy_level < this.state.taxonomy_data.length - 1\n      )\n      .map((taxonomy_layer, taxonomy_level) => {\n        const x = taxonomy_level * this.state.config.nodeGapHoriontal;\n        const y = 0;\n\n        var draw = true;\n\n        if (taxonomy_level > 0)\n          draw = this.state.taxonomy_data[taxonomy_level - 1].reduce(\n            (any_enabled, node) => {\n              any_enabled = any_enabled || node.expanded;\n              return any_enabled;\n            },\n            false\n          );\n\n        if (draw) {\n          return (\n            <foreignObject\n              style={{ overflow: 'visible' }}\n              key={taxonomy_level}\n              transform={`translate(${x}, ${y})`}\n              height={this.state.config.nodeHeight}\n              width={this.state.config.nodeWidth}>\n              <Toggle\n                key={taxonomy_level}\n                labelA=\"Expand\"\n                labelB=\"Collapse\"\n                onToggle={this.toggleLevel.bind(this, taxonomy_level)}\n                size=\"sm\"\n                aria-label=\"expand or collapse level\"\n                defaultToggled\n                id={taxonomy_level.toString()}\n              />\n            </foreignObject>\n          );\n        } else {\n          return <span key={taxonomy_level}></span>;\n        }\n      });\n\n    const taxonomy_area = view_config.tabs.map((tab, id) => (\n      <div className=\"tab-content\">\n        {tab.title_text && (\n          <>\n            <h6>{tab.title_text}</h6>\n            <br />\n          </>\n        )}\n        {tab.tab_name === this.state.active_tab && (\n          <div>\n            <Accordion align=\"start\">\n              {tab.fancy_chart && (\n                <AccordionItem\n                  title=\"Treemap View\"\n                  className=\"full-accordion\"\n                  open>\n                  <div className=\"bx--container\">\n                    <div className=\"bx--row\">\n                      <div style={{ borderRight: '1pt solid silver' }}>\n                        <h6>Relative Zoom</h6>\n\n                        <Slider\n                          hideTextInput\n                          id=\"slider\"\n                          max={16}\n                          min={0}\n                          step={1}\n                          onChange={this.handleSliderChange.bind(this)}\n                          value={this.state.config.slider}\n                        />\n                      </div>\n\n                      <div style={{ marginLeft: '10px' }}>\n                        <div>\n                          <h6 style={{ marginBottom: '5px' }}>\n                            Climb Hierarchy\n                          </h6>\n\n                          <Button\n                            onClick={this.onClimb.bind(this)}\n                            name=\"climb-down\"\n                            kind=\"ghost\"\n                            className=\"navigation-buttons\"\n                            renderIcon={CaretLeft32}\n                            iconDescription=\"Navigate Up\"\n                            size=\"sm\"\n                            disabled={\n                              this.state.config.plot_options.level === 1\n                            }\n                            hasIconOnly\n                          />\n                          <Button\n                            onClick={this.onClimb.bind(this)}\n                            name=\"climb-up\"\n                            kind=\"ghost\"\n                            className=\"navigation-buttons\"\n                            renderIcon={CaretRight32}\n                            iconDescription=\"Navigate Down\"\n                            size=\"sm\"\n                            disabled={\n                              this.state.config.plot_options.level ===\n                              this.state.taxonomy_data.length - 1\n                            }\n                            hasIconOnly\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"bx--row\">\n                      <div className={'bx--col-lg-' + this.state.config.slider}>\n                        {this.state.config.plot_options.draw_treemap && (\n                          <TreemapChart\n                            data={this.state.taxonomy_data_fancy}\n                            options={\n                              this.state.config.plot_options\n                            }></TreemapChart>\n                        )}\n                      </div>\n\n                      <div\n                        className={\n                          'bx--col-lg-' +\n                          (16 - this.state.config.slider).toString()\n                        }>\n                        {this.state.config.plot_options.draw_circlemap && (\n                          <CirclePackChart\n                            data={this.state.taxonomy_data_fancy}\n                            options={this.state.config.plot_options}>\n                            >\n                          </CirclePackChart>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </AccordionItem>\n              )}\n\n              <AccordionItem\n                title=\"Hierarchy View\"\n                className=\"full-accordion\"\n                open>\n                <div ref={this.ref}>\n                  <svg height=\"10000px\" width=\"100%\">\n                    {buttons}\n                    {edges}\n                    {nodes}\n                  </svg>\n                </div>\n              </AccordionItem>\n            </Accordion>\n\n            <Modal\n              modalHeading={this.renderParents(this.state.modal)}\n              modalLabel=\"Taxonomy View of VAM-HRI Interation Design Elements\"\n              passiveModal\n              hasScrollingContent\n              open={Boolean(this.state.modal)}\n              onRequestClose={this.onClickModalClose.bind(this)}\n              size=\"lg\"\n              aria-label=\"\"\n              style={{ height: '100%' }}>\n              <div className=\"bx--container\">\n                <div className=\"bx--row\">\n                  <div className=\"bx--col-lg-10\">\n                    {this.state.modal && (\n                      <>\n                        <h4>\n                          <span style={{ color: 'gray' }}>Category: </span>{' '}\n                          {this.state.modal.name}\n                        </h4>\n                        <hr />\n                        {this.state.modal.abstract && (\n                          <>\n                            <p>{this.state.modal.abstract}</p>\n                            <br />\n                            <br />\n                          </>\n                        )}\n                      </>\n                    )}\n\n                    {getChildren(this.state.modal, this.state.taxonomy_data)\n                      .length > 0 && (\n                      <>\n                        Children:{' '}\n                        {getChildren(\n                          this.state.modal,\n                          this.state.taxonomy_data\n                        ).map((child, i) => (\n                          <span key={i}>\n                            {i > 0 && ' | '}\n                            <Link\n                              onClick={this.onClickModalNode.bind(this, child)}>\n                              {child.name}\n                            </Link>\n                          </span>\n                        ))}\n                      </>\n                    )}\n\n                    <br />\n                    <br />\n\n                    <Button\n                      style={{ marginRight: '10px' }}\n                      kind=\"primary\"\n                      size=\"field\"\n                      renderIcon={Document32}\n                      iconDescription=\"Add\"\n                      href={config['metadata']['primary_link']}\n                      target=\"_blank\">\n                      Read More\n                    </Button>\n\n                    <Button\n                      kind=\"tertiary\"\n                      renderIcon={LogoGithub32}\n                      size=\"field\"\n                      href={config['metadata']['link_to_contribute']}\n                      target=\"_blank\">\n                      Contribute\n                    </Button>\n                    <br />\n                    <br />\n\n                    <StructuredListWrapper>\n                      <StructuredListHead>\n                        <StructuredListRow>\n                          <StructuredListCell head>\n                            Papers in this Category\n                          </StructuredListCell>\n                        </StructuredListRow>\n                      </StructuredListHead>\n                      <StructuredListBody>\n                        {this.state.paper_data\n                          .filter(\n                            paper =>\n                              paper['tags']\n                                .map(e => hashID(e))\n                                .indexOf(hashID(this.state.modal)) > -1\n                          )\n                          .map(item => (\n                            <StructuredListRow key={item.UID}>\n                              <StructuredListCell>\n                                <PaperInner paper={item} />\n                              </StructuredListCell>\n                              <StructuredListCell></StructuredListCell>\n                            </StructuredListRow>\n                          ))}\n                      </StructuredListBody>\n                    </StructuredListWrapper>\n                  </div>\n                  <div className=\"bx--col-lg-6\">\n                    {this.state.modal && (\n                      <SimpleBarChart\n                        data={this.getTimeline()}\n                        options={\n                          this.state.config.modal_timeline\n                        }></SimpleBarChart>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </Modal>\n          </div>\n        )}\n      </div>\n    ));\n\n    return (\n      <div>\n        {view_config.tabs.length === 1 && <>{taxonomy_area[0]}</>}\n\n        {view_config.tabs.length > 1 && (\n          <Tabs\n            scrollIntoView={false}\n            selected={view_config.tabs\n              .map(tab => view_config.default_tab === tab.tab_name)\n              .indexOf(true)}>\n            {view_config.tabs.map((tab, id) => (\n              <Tab\n                key={id}\n                id={tab.tab_name}\n                label={tab.tab_name}\n                disabled={tab.disabled}\n                onClick={this.switchTabs.bind(this, tab.tab_name)}>\n                {taxonomy_area[id]}\n              </Tab>\n            ))}\n          </Tabs>\n        )}\n      </div>\n    );\n  }\n}\n\nexport { Taxonomy };\n","import React from 'react';\nimport { ArrowRight16, DotMark16 } from '@carbon/icons-react';\nimport { PaperInner } from '../../components/Info';\nimport {\n  Tag,\n  Link,\n  InlineNotification,\n  Accordion,\n  AccordionItem,\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListCell,\n  Breadcrumb,\n  BreadcrumbItem,\n  MultiSelect,\n  NumberInput,\n  Button,\n  Pagination,\n  Tile,\n  Loading,\n  ToastNotification,\n  InlineLoading,\n} from 'carbon-components-react';\n\nimport ShapeNode from '@carbon/charts-react/diagrams/ShapeNode';\nimport Edge from '@carbon/charts-react/diagrams/Edge';\n\nlet config = require('../../config.json');\nlet view_config = config.views.filter(view => view.name === 'Insights')[0];\n\nlet embeddings = require('../../compiler/data/Insights.json');\nlet taxonomy = require('../../compiler/data/Taxonomy.json');\ntaxonomy = taxonomy.find(\n  e => e.name === config.views.find(e => e.name === 'Taxonomy').default_tab\n);\n\nlet paper_data = taxonomy.data;\nlet taxonomy_data = taxonomy.taxonomy;\nlet tag_labels = [];\n\ntaxonomy_data.forEach((taxonomy_level, level) => {\n  taxonomy_level.forEach((taxonomy_item, idx) => {\n    var new_item = [];\n\n    if (taxonomy_item.parent) {\n      tag_labels.forEach((known_item, i) => {\n        if (taxonomy_item.parent === known_item[known_item.length - 1]) {\n          var new_item = known_item.map(e => e);\n          new_item.push(taxonomy_item.name);\n          tag_labels.push(new_item);\n        }\n      });\n    } else {\n      new_item.push(taxonomy_item.name);\n      tag_labels.push(new_item);\n    }\n  });\n});\n\ntag_labels = tag_labels.map((item, i) => {\n  return { id: i, text: item.join(' > ') };\n});\n\nconst ShapeNodeSize = 10;\nconst SpecialShapeNodeSize = 20;\nconst fillFactor = 0.75;\nconst maxImagination = 5;\n\nclass Insight extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {\n      embeddings: embeddings,\n      paper_data: paper_data,\n      imagination: props.data,\n      loading: false,\n      error: false,\n      rendered: false,\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== prevProps.data)\n      this.setState(\n        {\n          ...this.state,\n          paper_data: this.props.paper_data,\n          imagination: this.props.data,\n        },\n        () => {\n          this.componentDidMount();\n        }\n      );\n  }\n\n  componentDidMount() {\n    this.setState(\n      {\n        ...this.state,\n        loading: true,\n      },\n      () => {\n        fetch(config.link_to_server + '/embeddings', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n          },\n          body: JSON.stringify(this.state),\n        })\n          .then(result => result.json())\n          .then(embeddings => {\n            const stageHeight = this.ref.current.offsetHeight;\n            const stageWidth = this.ref.current.offsetWidth;\n\n            const offsetX = Math.min(...embeddings.map(e => e.x));\n            const maxX = Math.max(...embeddings.map(e => e.x));\n            const offsetY = Math.min(...embeddings.map(e => e.y));\n            const maxY = Math.max(...embeddings.map(e => e.y));\n\n            let new_embeddings = embeddings.map(e => {\n              var new_embedding = e;\n              new_embedding.x =\n                (fillFactor * stageWidth * (-offsetX + e.x)) / (maxX - offsetX);\n              new_embedding.y =\n                (fillFactor * stageHeight * (-offsetY + e.y)) /\n                (maxY - offsetY);\n              return new_embedding;\n            });\n\n            const new_paper_data = paper_data.map(item => {\n              const embedding_item = new_embeddings.filter(\n                e => e.UID === item.UID\n              )[0];\n              var new_item = item;\n              new_item['x'] =\n                5 * ShapeNodeSize + this.applyScalingX(1, embedding_item.x);\n              new_item['y'] =\n                5 * ShapeNodeSize + this.applyScalingY(1, embedding_item.y);\n              new_item.selected = false;\n              return new_item;\n            });\n\n            var new_paper = { UID: 0 };\n            var new_paper_embedding = new_embeddings.filter(\n              e => e.UID === 0\n            )[0];\n\n            new_paper['x'] =\n              5 * ShapeNodeSize + this.applyScalingX(1, new_paper_embedding.x);\n            new_paper['y'] =\n              5 * ShapeNodeSize + this.applyScalingY(1, new_paper_embedding.y);\n\n            this.setState({\n              ...this.state,\n              paper_data: new_paper_data,\n              new_paper: new_paper,\n              loading: false,\n              rendered: true,\n            });\n          })\n          .catch(data => {\n            this.setState({\n              ...this.state,\n              loading: false,\n              error: true,\n            });\n          });\n      }\n    );\n  }\n\n  applyScalingX(scale, x) {\n    return scale * x;\n  }\n\n  applyScalingY(scale, y) {\n    return scale * y;\n  }\n\n  selectNode(id, e) {\n    window.scrollTo({\n      top: e.pageY / 1.5,\n      behavior: 'smooth',\n    });\n\n    const new_neighbors = this.state.imagination.neighbors.map(\n      (neighbor, i) => {\n        var neighbor_info = neighbor;\n        neighbor_info['selected'] = !neighbor.selected && neighbor.UID === id;\n\n        return neighbor_info;\n      }\n    );\n\n    this.setState({\n      ...this.state,\n      imagination: {\n        ...this.state.imagination,\n        neighbors: new_neighbors,\n      },\n    });\n  }\n\n  render() {\n    let special_node = null;\n    let edges = [];\n    let nodes = [];\n\n    if (this.state.rendered) {\n      nodes = this.state.paper_data.map((paper, idx) => (\n        <foreignObject\n          key={idx}\n          style={{ overflow: 'visible' }}\n          transform={`translate(${paper.x}, ${paper.y})`}>\n          <ShapeNode\n            id={paper.UID}\n            size={ShapeNodeSize}\n            onClick={this.selectNode.bind(this, paper.UID)}\n            renderIcon={<DotMark16 />}\n            className={\n              this.state.imagination.neighbors\n                .map(p => p.UID)\n                .indexOf(paper.UID) > -1\n                ? 'selected-circle'\n                : 'unselected-circle'\n            }\n          />\n        </foreignObject>\n      ));\n\n      if (this.state.new_paper) {\n        special_node = (\n          <foreignObject\n            key={0}\n            style={{ overflow: 'visible' }}\n            transform={`translate(${this.state.new_paper.x}, ${this.state.new_paper.y})`}>\n            <ShapeNode\n              id={0}\n              size={SpecialShapeNodeSize}\n              onClick={this.selectNode.bind(this, this.state.new_paper.UID)}\n              renderIcon={<DotMark16 />}\n              className=\"special-circle\"\n            />\n          </foreignObject>\n        );\n\n        edges = this.state.paper_data\n          .filter(\n            paper =>\n              this.state.imagination.neighbors\n                .map(p => p.UID)\n                .indexOf(paper.UID) > -1\n          )\n          .map((paper, i) => {\n            var source = JSON.parse(JSON.stringify(paper));\n            var target = JSON.parse(JSON.stringify(this.state.new_paper));\n\n            source.x = source.x + ShapeNodeSize / 2;\n            source.y = source.y + ShapeNodeSize / 2;\n\n            target.x = target.x + SpecialShapeNodeSize / 2;\n            target.y = target.y + SpecialShapeNodeSize / 2;\n\n            return (\n              <Edge\n                key={`link_${i}`}\n                source={source}\n                target={target}\n                variant=\"dash-md\"\n              />\n            );\n          });\n      }\n    }\n    return (\n      <>\n        <div className=\"bx--col-lg-16\">\n          <br />\n          <div className=\"bx--row\" style={{ width: '75%' }}>\n            <Tile>\n              <p style={{ fontSize: 'inherit' }}>\n                This is a paper, described in terms of the tags in this\n                taxonomy, that does not exist yet! It is shown below in{' '}\n                <span style={{ color: 'green' }}>green</span> in{' '}\n                <em>\"tag space\"</em>.\n              </p>\n            </Tile>\n          </div>\n          <br />\n\n          {this.state.imagination.key_map.map((item, idx) => {\n            const new_item = item.split(' > ');\n            const render_item = new_item.map((tag, i) => (\n              <div key={i}>\n                <Tag\n                  size=\"sm\"\n                  type={i === new_item.length - 1 ? 'green' : 'gray'}\n                  title={tag}>\n                  {tag}\n                </Tag>\n                {i !== new_item.length - 1 && (\n                  <ArrowRight16 className=\"label-connector\" />\n                )}\n              </div>\n            ));\n\n            return (\n              <div key={idx} className=\"bx--row\">\n                {render_item}\n              </div>\n            );\n          })}\n          <br />\n          <br />\n\n          {this.state.loading && (\n            <InlineLoading description=\"Loading new paper embeddings...\" />\n          )}\n\n          {this.state.error && (\n            <>\n              <br />\n              <br />\n              <ToastNotification\n                lowContrast\n                subtitle={\n                  <span>\n                    There was an error rendering the new paper embedding. Please\n                    report a bug{' '}\n                    <Link\n                      href={config['metadata']['link_to_code'] + '/issues'}\n                      target=\"_blank\">\n                      here\n                    </Link>\n                    .\n                  </span>\n                }\n                title=\"ERROR\"\n              />\n            </>\n          )}\n\n          <div ref={this.ref} style={{ height: '30vh' }}>\n            {!this.state.loading && !this.state.error && (\n              <svg height=\"100%\" width=\"100%\">\n                {edges}\n                {nodes}\n                {special_node}\n              </svg>\n            )}\n          </div>\n        </div>\n\n        <StructuredListWrapper ariaLabel=\"Neighboring Papers\">\n          <StructuredListHead>\n            <StructuredListRow>\n              <StructuredListCell head>Neighboring Papers</StructuredListCell>\n            </StructuredListRow>\n          </StructuredListHead>\n          <StructuredListBody>\n            <StructuredListRow>\n              <StructuredListCell>\n                To get to this new paper, our AI thinks you should be looking at\n                the following papers known to our system as the state of the art\n                that immediately makes the new work possible. Each paper is\n                tagged with features that need relaxation or extension to get to\n                the new paper.\n                {this.state.paper_data.length > 0 && (\n                  <StructuredListBody>\n                    {this.state.imagination.neighbors.map((paper, idx) => (\n                      <StructuredListRow\n                        key={idx}\n                        className={\n                          idx === this.state.imagination.neighbors.length - 1\n                            ? 'no-bottom-border'\n                            : ''\n                        }>\n                        <StructuredListCell\n                          className={Boolean(paper.selected) ? 'text-blue' : ''}\n                          style={{ width: '20%' }}>\n                          <PaperInner\n                            paper={\n                              this.state.paper_data.filter((p, i) => {\n                                return p.UID === paper.UID;\n                              })[0]\n                            }\n                          />\n                        </StructuredListCell>\n                        <StructuredListCell style={{ width: '80%' }}>\n                          {paper.transforms.map((t, i) => {\n                            const key_split = t.key.split(' > ');\n                            const render_keys = key_split.map((t_item, ti) => (\n                              <BreadcrumbItem\n                                key={ti}\n                                isCurrentPage={!paper.selected}>\n                                {t_item}\n                              </BreadcrumbItem>\n                            ));\n\n                            return (\n                              <Breadcrumb\n                                style={{ marginBottom: '5px' }}\n                                key={i}\n                                noTrailingSlash>\n                                {render_keys}\n                                <BreadcrumbItem>\n                                  {t.value ? (\n                                    <span className=\"text-blue\">True</span>\n                                  ) : (\n                                    <span style={{ color: 'red' }}>False</span>\n                                  )}\n                                </BreadcrumbItem>\n                              </Breadcrumb>\n                            );\n                          })}\n                        </StructuredListCell>\n                      </StructuredListRow>\n                    ))}\n                  </StructuredListBody>\n                )}\n              </StructuredListCell>\n            </StructuredListRow>\n          </StructuredListBody>\n        </StructuredListWrapper>\n      </>\n    );\n  }\n}\n\nclass Insights extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: config['default_view'],\n      paper_data: paper_data,\n      taxonomy_data: taxonomy_data,\n      pageID: 1,\n      pageMAX: 1,\n      new_papers: [],\n      selected_papers: [],\n      selected_tags: [],\n      num_papers: 1,\n      loading: false,\n      error: false,\n    };\n\n    this.updateSelectedTab();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.props !== prevProps.props)\n      this.setState({\n        ...this.state,\n        paper_data: this.props.props,\n      });\n  }\n\n  changeNumePapers = e => {\n    this.setState({\n      ...this.state,\n      num_papers: parseInt(e.imaginaryTarget.value),\n    });\n  };\n\n  logPaperSelection = e => {\n    this.setState({\n      ...this.state,\n      selected_papers: e.map(item => item.id),\n    });\n  };\n\n  logTagSelection = e => {\n    this.setState({\n      ...this.state,\n      selected_tags: e.map(item => item.text),\n    });\n  };\n\n  updateSelectedTab(e) {\n    this.props.updateSelectedTab(this.state.paper_data, []);\n  }\n\n  imaginePapers(e) {\n    this.setState(\n      {\n        ...this.state,\n        loading: true,\n        error: false,\n        new_papers: [],\n      },\n      () => {\n        const temp_paper_data = this.state.paper_data.map((paper, i) => {\n          var new_paper = JSON.parse(JSON.stringify(paper));\n          var tag_chain = [];\n\n          new_paper.tags.forEach(tag => {\n            var temp_c = [];\n            if (tag.parent) temp_c = [tag.parent];\n\n            temp_c.push(tag.name);\n            var temp_c_for_check = temp_c.join(' > ');\n\n            tag_labels.forEach(reference => {\n              if (reference.text.endsWith(temp_c_for_check)) {\n                tag_chain.push(reference.text);\n                return false;\n              }\n            });\n          });\n\n          new_paper['tag_chain'] = tag_chain;\n          return new_paper;\n        });\n\n        const payload = {\n          paper_data: temp_paper_data,\n          selected_papers: this.state.selected_papers.length\n            ? this.state.selected_papers\n            : this.state.paper_data.map(i => i.UID),\n          selected_tags: this.state.selected_tags.length\n            ? this.state.selected_tags\n            : tag_labels,\n          num_papers: this.state.num_papers,\n          domain: config.metadata.acronym,\n        };\n\n        fetch(config.link_to_server + '/imagine', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n          },\n          body: JSON.stringify(payload),\n        })\n          .then(result => result.json())\n          .then(data => {\n            this.setState({\n              ...this.state,\n              new_papers: data,\n              loading: false,\n            });\n          })\n          .catch(data => {\n            this.setState({\n              ...this.state,\n              loading: false,\n              error: true,\n            });\n          });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"bx--grid bx--grid--full-width\"\n          style={{\n            width: '100%',\n            minHeight: '100vh',\n          }}>\n          <Accordion align=\"start\">\n            <AccordionItem title=\"Tell me topics that do not have any papers!\">\n              <InlineNotification\n                lowContrast\n                hideCloseButton\n                kind=\"error\"\n                title=\"Coming soon!\"\n              />\n            </AccordionItem>\n            <AccordionItem title=\"What are topics that have the least number of papers?\">\n              <InlineNotification\n                lowContrast\n                hideCloseButton\n                kind=\"error\"\n                title=\"Coming soon!\"\n              />\n            </AccordionItem>\n            <AccordionItem title=\"What are most popular topics?\">\n              <InlineNotification\n                lowContrast\n                hideCloseButton\n                kind=\"error\"\n                title=\"Coming soon!\"\n              />\n            </AccordionItem>\n            <AccordionItem title=\"Search papers using tags\">\n              <p>\n                You can search papers interactively using tags in the{' '}\n                <Link href=\"/\">home</Link> page.\n              </p>\n            </AccordionItem>\n            <AccordionItem\n              className=\"whats-next\"\n              title={<>What should I work on next?! &#129299;</>}\n              open>\n              <p style={{ fontSize: 'inherit' }}>\n                In her{' '}\n                <Link\n                  href=\"https://ojs.aaai.org/index.php/aimagazine/article/view/18149\"\n                  target=\"_blank\">\n                  AAAI 2020 presidential address\n                </Link>\n                , Yolanda Gil asked:{' '}\n                <em>\"Will AI write the scientific papers of the future?\"</em> to\n                put into context the outsized impact that AI is beginning to\n                have on the scientific process. This section builds on this\n                theme and uses an AI constraint solver to imagine new papers yet\n                unwritten. Learn more about it{' '}\n                <Link href=\"\" target=\"_blank\">\n                  here\n                </Link>\n                .\n              </p>\n\n              <br />\n              <br />\n\n              {view_config.interactive && (\n                <>\n                  <MultiSelect\n                    helperText=\"You can make the new paper search focus on papers of interest. If nothing is selected, the system will work with all the papers.\"\n                    id=\"multiselect-paper\"\n                    itemToString={item => (item ? item.text : '')}\n                    items={this.state.paper_data.map((paper, i) => {\n                      return {\n                        id: i,\n                        text: paper.title + ' by ' + paper.authors,\n                      };\n                    })}\n                    label=\"List of papers\"\n                    titleText={\n                      <>\n                        <span style={{ color: 'red' }}>Optional</span> Select\n                        list of papers you want to focus on\n                      </>\n                    }\n                    initialSelectedItems={this.state.selected_papers}\n                    onChange={value => {\n                      this.logPaperSelection(value.selectedItems);\n                    }}\n                  />\n\n                  <br />\n                  <br />\n\n                  <MultiSelect\n                    helperText=\"You can make the new paper search focus on tags of interest. If nothing is selected, the system will work with all the tags.\"\n                    id=\"multiselect-tags\"\n                    itemToString={item => (item ? item.text : '')}\n                    items={tag_labels}\n                    label=\"List of tags\"\n                    titleText={\n                      <>\n                        <span style={{ color: 'red' }}>Optional</span> Select\n                        list of tags you want to focus on\n                      </>\n                    }\n                    initialSelectedItems={this.state.selected_tags}\n                    onChange={value => {\n                      this.logTagSelection(value.selectedItems);\n                    }}\n                  />\n\n                  <br />\n                  <br />\n                </>\n              )}\n\n              <div className=\"bx--row\">\n                <div className=\"bx--col-lg-4\">\n                  <NumberInput\n                    helperText={\n                      <>\n                        <span style={{ color: 'red' }}>Optional</span> Number of\n                        papers\n                      </>\n                    }\n                    id=\"num-papers\"\n                    invalidText=\"Number is not valid\"\n                    max={maxImagination}\n                    min={1}\n                    step={1}\n                    value={this.state.num_papers}\n                    onChange={this.changeNumePapers.bind(this)}\n                  />\n                </div>\n                <div className=\"bx--col-lg-4\">\n                  <Button\n                    kind=\"primary\"\n                    size=\"field\"\n                    onClick={this.imaginePapers.bind(this)}>\n                    What's Next\n                  </Button>\n                </div>\n              </div>\n\n              {this.state.loading && (\n                <div style={{ padding: '50px' }}>\n                  <Loading\n                    style={{ margin: '0 auto' }}\n                    description=\"Active loading indicator\"\n                    withOverlay={false}\n                  />\n                </div>\n              )}\n\n              {this.state.error && (\n                <>\n                  <br />\n                  <br />\n                  <ToastNotification\n                    lowContrast\n                    subtitle={\n                      <span>\n                        There was an error contacting the server. Please report\n                        a bug{' '}\n                        <Link\n                          href={config['metadata']['link_to_code'] + '/issues'}\n                          target=\"_blank\">\n                          here\n                        </Link>\n                        .\n                      </span>\n                    }\n                    title=\"ERROR\"\n                  />\n                </>\n              )}\n\n              {this.state.new_papers.length > 0 && (\n                <div>\n                  <br />\n                  <br />\n\n                  <Pagination\n                    backwardText=\"Previous paper\"\n                    forwardText=\"Next paper\"\n                    itemsPerPageText=\"Papers per page:\"\n                    page={1}\n                    pageSize={1}\n                    pageSizes={[\n                      ...Array(this.state.new_papers.length).keys(),\n                    ].map(i => i + 1)}\n                    size=\"md\"\n                    totalItems={this.state.new_papers.length}\n                    onChange={e => {\n                      this.setState({\n                        ...this.state,\n                        pageID: e.page,\n                        pageMAX: e.pageSize,\n                      });\n                    }}\n                  />\n\n                  {[...Array(this.state.new_papers.length).keys()].map(\n                    (item, idx) => {\n                      if (\n                        idx >= (this.state.pageID - 1) * this.state.pageMAX &&\n                        idx < this.state.pageID * this.state.pageMAX\n                      ) {\n                        return (\n                          <Insight\n                            key={idx}\n                            paper_data={this.state.paper_data}\n                            data={this.state.new_papers[idx]}\n                          />\n                        );\n                      } else {\n                        return null;\n                      }\n                    }\n                  )}\n                </div>\n              )}\n\n              <br />\n              <br />\n            </AccordionItem>\n          </Accordion>\n        </div>\n      </>\n    );\n  }\n}\n\nexport { Insights };\n","import React from 'react';\nimport { CaretUp32, CaretDown32 } from '@carbon/icons-react';\nimport {\n  Search,\n  ToastNotification,\n  NumberInput,\n  Button,\n} from 'carbon-components-react';\nimport { Paper, hashID } from '../../components/Info';\n\nimport { Affinity } from '../Affinity';\nimport { Network } from '../Network';\nimport { Taxonomy } from '../Taxonomy';\nimport { Insights } from '../Insights';\n\nconst components = {\n  Taxonomy: Taxonomy,\n  Network: Network,\n  Affinity: Affinity,\n  Insights: Insights,\n};\n\nlet config = require('../../config.json');\nlet current_year = new Date().getFullYear();\n\nclass BasicElement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taxonomy_data: [],\n      paper_data: [],\n      active_view: props.props,\n      config: config,\n      search: '',\n      tags: [],\n      number: 0,\n      years: {\n        min_min: 1984,\n        min_val: config.min_year,\n        max_max: current_year,\n        max_val: current_year,\n        cur_val: current_year,\n      },\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.props !== prevProps.props)\n      this.setState({\n        ...this.state,\n        active_view: this.props.props,\n        search: '',\n        tags: [],\n      });\n  }\n\n  handleSimulate(e) {\n    this.setState(\n      {\n        ...this.state,\n        years: {\n          ...this.state.years,\n          cur_val: e,\n        },\n      },\n      () => {\n        this.refreshData();\n      }\n    );\n  }\n\n  refreshData = e => {\n    var updated_paper_list = this.state.cached_paper_data\n      .filter(\n        item =>\n          this.state.tags.filter(tag =>\n            new Set(item.tags.map(e => hashID(e))).has(hashID(tag))\n          ).length > 0 || this.state.tags.length === 0\n      )\n      .filter(item => {\n        if (!this.state.search) return true;\n\n        var search_phrase = this.state.search.trim().toLowerCase();\n        var search_list = search_phrase.split('||');\n        var meta_data = [\n          item.title,\n          item.authors,\n          item.venue,\n          item.year,\n          item.abstract,\n        ]\n          .join(' ')\n          .toLowerCase()\n          .replaceAll(',', ' ')\n          .replaceAll('.', ' ');\n\n        var meta_data_set = new Set(meta_data.split(/\\s+/));\n\n        var is_true = search_list.reduce((is_true, s) => {\n          var search_keywords_list = s\n            .trim()\n            .split(/\\s+/)\n            .map(e => {\n              return e.trim();\n            });\n\n          if (s)\n            is_true =\n              is_true ||\n              meta_data.indexOf(s) > -1 ||\n              search_keywords_list.filter(search_keyword =>\n                meta_data_set.has(search_keyword)\n              ).length === search_keywords_list.length;\n\n          return is_true;\n        }, false);\n\n        return is_true;\n      })\n      .filter(\n        item =>\n          parseInt(item.year) >= this.state.years.min_val &&\n          parseInt(item.year) <= this.state.years.max_val &&\n          parseInt(item.year) <= this.state.years.cur_val\n      );\n\n    var number = updated_paper_list.length;\n\n    this.setState({\n      ...this.state,\n      paper_data: updated_paper_list.map(e => {\n        e.selected = true;\n        return e;\n      }),\n      number: number,\n    });\n  };\n\n  updateSelectedTab = (paper_data, taxonomy_data) => {\n    const min_year = paper_data.reduce((min_year, paper) => {\n      if (paper.year < min_year) min_year = paper.year;\n\n      return min_year;\n    }, this.state.years.max_max);\n\n    const max_year = paper_data.reduce((max_year, paper) => {\n      if (paper.year > max_year) max_year = paper.year;\n\n      return max_year;\n    }, this.state.years.min_min);\n\n    this.setState({\n      ...this.state,\n      taxonomy_data: taxonomy_data,\n      paper_data: paper_data,\n      cached_paper_data: paper_data,\n      search: '',\n      tags: [],\n      number: paper_data.length,\n      years: {\n        ...this.state.years,\n        min_min: min_year,\n        max_max: max_year,\n        min_val: min_year,\n        max_val: max_year,\n      },\n    });\n  };\n\n  updateSelectedTags = tag => {\n    var current_tags = this.state.tags;\n    var index_of_tag = current_tags.map(e => hashID(e)).indexOf(hashID(tag));\n\n    if (index_of_tag > -1) {\n      current_tags.splice(index_of_tag, 1);\n    } else {\n      current_tags.push(tag);\n    }\n\n    this.setState(\n      {\n        ...this.state,\n        tags: current_tags,\n      },\n      () => {\n        this.refreshData();\n      }\n    );\n  };\n\n  handleInputChange = e => {\n    this.setState(\n      {\n        search: e.target.value,\n      },\n      () => {\n        this.refreshData();\n      }\n    );\n  };\n\n  sortYear = e => {\n    var mode_selector = e.currentTarget.name === 'decreasing' ? -1 : 1;\n    var new_paper_data = this.state.paper_data;\n\n    new_paper_data.sort(function(a, b) {\n      return a.year <= b.year ? -1 * mode_selector : 1 * mode_selector;\n    });\n\n    this.setState({\n      ...this.state,\n      paper_data: new_paper_data,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"bx--container\">\n        <div className=\"bx--row\">\n          <div className=\"bx--col-lg-10\">\n            <Search\n              light\n              labelText=\"\"\n              id=\"search\"\n              placeholder=\"Search\"\n              size=\"sm\"\n              value={this.state.search}\n              onChange={this.handleInputChange.bind(this)}\n            />\n            <div className=\"label-text\" style={{ paddingTop: '5px' }}>\n              The search is case insensitive and looks for an AND of all\n              keywords. Use an \"||\" for OR semantics.\n            </div>\n          </div>\n\n          <div className=\"bx--col-lg-3\">\n            <NumberInput\n              light\n              onChange={e => {\n                this.setState(\n                  {\n                    ...this.state,\n                    years: {\n                      ...this.state.years,\n                      min_val: parseInt(e.imaginaryTarget.value),\n                    },\n                  },\n                  () => {\n                    this.refreshData();\n                  }\n                );\n              }}\n              size=\"sm\"\n              id=\"min-year\"\n              min={this.state.years.min_min}\n              max={this.state.years.max_val}\n              value={this.state.years.min_val}\n              helperText={<div className=\"label-text\">Earliest date</div>}\n              invalidText=\"Invalid\"\n            />\n          </div>\n\n          <div className=\"bx--col-lg-3\">\n            <NumberInput\n              light\n              onChange={e => {\n                this.setState(\n                  {\n                    ...this.state,\n                    years: {\n                      ...this.state.years,\n                      max_val: parseInt(e.imaginaryTarget.value),\n                    },\n                  },\n                  () => {\n                    this.refreshData();\n                  }\n                );\n              }}\n              size=\"sm\"\n              id=\"max-year\"\n              min={this.state.years.min_val}\n              max={this.state.years.max_max}\n              value={this.state.years.max_val}\n              helperText={<div className=\"label-text\">Latest date</div>}\n              invalidText=\"Invalid\"\n            />\n          </div>\n        </div>\n\n        <br />\n        <br />\n\n        <div className=\"bx--row\">\n          <div className=\"bx--col-lg-12\">\n            {this.state.config.views.map((view, id) => {\n              if (this.state.active_view === view.name) {\n                const Component = components[view.name];\n\n                if (view.disabled) {\n                  return (\n                    <ToastNotification\n                      lowContrast\n                      hideCloseButton\n                      key={id}\n                      type=\"error\"\n                      subtitle={\n                        <span>\n                          The authors have disabled the {view.name} view. Please\n                          check out the other viewing options on the left.\n                        </span>\n                      }\n                      title=\"DISABLED\"\n                    />\n                  );\n                } else {\n                  return (\n                    <Component\n                      props={this.state.paper_data}\n                      updateSelectedTags={this.updateSelectedTags.bind(this)}\n                      updateSelectedTab={this.updateSelectedTab.bind(this)}\n                      handleSimulate={this.handleSimulate.bind(this)}\n                      years={this.state.years}\n                      key={id}\n                    />\n                  );\n                }\n              }\n\n              return null;\n            })}\n          </div>\n          <div className=\"bx--col-lg-4\">\n            <p>\n              Showing all <span className=\"text-blue\">{this.state.number}</span>{' '}\n              papers\n              {Boolean(this.state.search || this.state.tags.length > 0) && (\n                <span> with </span>\n              )}\n              {this.state.tags.length > 0 && (\n                <span className=\"text-blue\">\n                  selected tags{' '}\n                  {this.state.tags\n                    .map(item => item.parent + ':' + item.name)\n                    .join(', ')}\n                </span>\n              )}\n              {Boolean(this.state.search && this.state.tags.length) > 0 && (\n                <span> and </span>\n              )}\n              {this.state.search && (\n                <>\n                  {' '}\n                  one or more of keywords{' '}\n                  <span className=\"text-blue\">{this.state.search}</span> in\n                  their metadata\n                </>\n              )}\n              .\n            </p>\n            <br />\n\n            <Button\n              onClick={this.sortYear.bind(this)}\n              name=\"decreasing\"\n              kind=\"ghost\"\n              className=\"navigation-buttons\"\n              renderIcon={CaretUp32}\n              iconDescription=\"Sort down by year\"\n              size=\"sm\"\n              hasIconOnly\n            />\n            <Button\n              onClick={this.sortYear.bind(this)}\n              name=\"increasing\"\n              kind=\"ghost\"\n              className=\"navigation-buttons\"\n              renderIcon={CaretDown32}\n              iconDescription=\"Sort up by year\"\n              size=\"sm\"\n              hasIconOnly\n            />\n            <Button\n              kind=\"secondary\"\n              size=\"sm\"\n              onClick={this.props.logChange.bind(this, { name: 'Insights' })}>\n              Insights\n            </Button>\n\n            {this.state.paper_data.map((item, id) => (\n              <Paper key={id} paper={item} />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { BasicElement };\n","import React from 'react';\nimport GitHubButton from 'react-github-btn';\nimport { isMobile } from 'react-device-detect';\nimport {\n  Document32,\n  LogoGithub32,\n  LogoSlack32,\n  Add32,\n} from '@carbon/icons-react';\nimport { BasicElement } from '../../components/BasicElement';\nimport {\n  Button,\n  ButtonSet,\n  ContentSwitcher,\n  Switch,\n  CodeSnippet,\n  Link,\n  ToastNotification,\n  Tile,\n  Accordion,\n  AccordionItem,\n} from 'carbon-components-react';\n\nlet config = require('../../config.json');\n\nclass LandingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: config['default_view'],\n    };\n  }\n\n  logChange = e => {\n    this.setState({\n      view: e.name,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"bx--grid bx--grid--full-width\"\n          style={{\n            width: '100%',\n            minHeight: '100vh',\n          }}>\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-4 sidebar\">\n              <div className=\"bx--container\">\n                <ContentSwitcher\n                  onChange={e => this.logChange(e)}\n                  size=\"sm\"\n                  selectedIndex={config['views']\n                    .map(e => e.name)\n                    .indexOf(this.state.view)}>\n                  {config['views'].map((view, id) => (\n                    <Switch key={id} name={view['name']} text={view['name']} />\n                  ))}\n                </ContentSwitcher>\n\n                <br />\n                <br />\n\n                <h3>{config['metadata']['title_text']}</h3>\n\n                <br />\n                <CodeSnippet type=\"multi\">\n                  {config['metadata']['citation_text']}\n                </CodeSnippet>\n\n                <br />\n\n                {config['metadata']['info_tile'] && (\n                  <Tile>\n                    <p style={{ fontSize: 'small' }}>\n                      {config['metadata']['info_text']}\n                    </p>\n\n                    <div style={{ paddingTop: '3px' }}>\n                      {config['metadata']['info_link'].map((link, id) => (\n                        <span key={id}>\n                          {' '}\n                          {id > 0 && '|'}{' '}\n                          <Link href={link.link} target=\"_blank\">\n                            {link.text}\n                          </Link>\n                        </span>\n                      ))}\n                    </div>\n                  </Tile>\n                )}\n\n                <br />\n\n                <ButtonSet stacked>\n                  <Button\n                    kind=\"primary\"\n                    className=\"buttonset\"\n                    size=\"field\"\n                    renderIcon={Document32}\n                    href={config['metadata']['primary_link']}\n                    target=\"_blank\">\n                    Read\n                  </Button>\n                  <br />\n                  {config['metadata']['secondary_links'].length === 1 && (\n                    <>\n                      <Button\n                        kind=\"tertiary\"\n                        className=\"buttonset\"\n                        size=\"small\"\n                        renderIcon={Document32}\n                        href={config['metadata']['secondary_links'][0]['link']}\n                        target=\"_blank\">\n                        See Also\n                      </Button>\n                      <br />\n                    </>\n                  )}\n                  <Button\n                    kind=\"tertiary\"\n                    className=\"buttonset tertiary-secondary\"\n                    renderIcon={LogoGithub32}\n                    size=\"small\"\n                    href={config['metadata']['link_to_contribute']}\n                    target=\"_blank\">\n                    Contribute\n                  </Button>\n                  <br />\n                  {config['metadata']['community_link'] && (\n                    <>\n                      <Button\n                        kind=\"tertiary\"\n                        className=\"buttonset tertiary-danger\"\n                        renderIcon={LogoSlack32}\n                        size=\"small\"\n                        href={config['metadata']['community_link']}\n                        target=\"_blank\">\n                        Community\n                      </Button>\n                      <br />\n                    </>\n                  )}\n                  {config['metadata']['secondary_links'].length > 1 && (\n                    <div\n                      className=\"bx--col-lg-8\"\n                      style={{ padding: 0, margin: 0, maxWidth: '12.25rem' }}>\n                      <Accordion align=\"start\">\n                        <AccordionItem\n                          className=\"see-also-accordion\"\n                          title=\"See also\"\n                          onClick={e => {\n                            window.scrollTo({\n                              top:\n                                e.currentTarget.offsetHeight > e.pageY / 4\n                                  ? 0\n                                  : e.pageY / 2,\n                              behavior: 'smooth',\n                            });\n                          }}>\n                          <ButtonSet stacked>\n                            <br />\n                            <br />\n                            {config['metadata']['secondary_links'].map(\n                              (item, i) => (\n                                <div key={i}>\n                                  <Button\n                                    target=\"_blank\"\n                                    href={item.link}\n                                    kind=\"ghost\"\n                                    renderIcon={Add32}>\n                                    {item.name}\n                                  </Button>\n                                  <br />\n                                  <br />\n                                </div>\n                              )\n                            )}\n                          </ButtonSet>\n                        </AccordionItem>\n                      </Accordion>\n                    </div>\n                  )}\n                </ButtonSet>\n              </div>\n\n              {!isMobile && (\n                <div\n                  className=\"footer bx--col-lg-4\"\n                  style={{\n                    backgroundColor: 'rgba(255,255,255,0.9)',\n                    zIndex: '999',\n                  }}>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col-lg-16\">\n                      <div className=\"bx--container\">\n                        <p\n                          style={{\n                            fontSize: 'small',\n                            marginBottom: '10px',\n                            maxWidth: '75%',\n                          }}>\n                          Follow us on GitHub. Your love\n                          <br /> keeps us going!{' '}\n                          <span role=\"img\" aria-label=\"hugging face\">\n                            &#129303;\n                          </span>\n                        </p>\n\n                        <GitHubButton\n                          href={config['metadata']['link_to_code']}\n                          data-size=\"small\"\n                          data-show-count=\"true\"\n                          aria-label=\"Star survey-visualizer on GitHub\">\n                          Star\n                        </GitHubButton>\n                      </div>\n\n                      <div className=\"bx--container\">\n                        App built by{' '}\n                        <Link\n                          href=\"https://twitter.com/tchakra2\"\n                          target=\"_blank\">\n                          tchakra2\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"bx--col-lg-12\">\n              {isMobile ? (\n                <div className=\"bx--container\">\n                  <ToastNotification\n                    lowContrast\n                    hideCloseButton\n                    type=\"error\"\n                    subtitle={\n                      <span>This application only runs on a desktop.</span>\n                    }\n                    title=\"Please switch to widescreen.\"\n                  />\n                </div>\n              ) : (\n                <BasicElement\n                  props={this.state.view}\n                  logChange={this.logChange.bind(this)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default LandingPage;\n","import LandingPage from './LandingPage';\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport './app.scss';\n\nimport { Content } from 'carbon-components-react/lib/components/UIShell';\nimport { Route, Switch } from 'react-router-dom';\n\nimport LandingPage from './content/LandingPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Content>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/home\" component={LandingPage} />\n          </Switch>\n        </Content>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}